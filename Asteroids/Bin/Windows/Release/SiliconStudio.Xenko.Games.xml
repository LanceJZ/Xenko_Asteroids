<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SiliconStudio.Xenko.Games</name>
    </assembly>
    <members>
        <member name="T:SiliconStudio.XenkoVersion">
            <summary>
            Internal version used to identify Xenko version.
            </summary>
            <remarks>
            Note: When modifying the version here, it must be modified also in the Xenko.xkpkg 
            </remarks>
        </member>
        <member name="F:SiliconStudio.XenkoVersion.CurrentAssemblyAsText">
            <summary>
            The .NET current assembly version as text, not including pre-release (alpha, beta...) information.
            </summary>
        </member>
        <member name="F:SiliconStudio.XenkoVersion.CurrentAsText">
            <summary>
            The Store current version as text, including pre-release (alpha, beta...) information
            </summary>
            <remarks>
            Version number as described in http://docs.nuget.org/docs/reference/versioning
            When using pre-release (alpha, beta, rc...etc.) and because the order of the release is in alphabetical order,
            please use a double digit like alpha00 alpha01...etc. in order to make sure that we will follow the correct
            order for the versions.
            </remarks>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.AssemblyDoc">
            <summary>
            The <see cref="A:SiliconStudio.Xenko.Games"/> assembly provides a high level Game API.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GameForm">
            <summary>
            Default Rendering Form on windows desktop.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:SiliconStudio.Xenko.Games.GameForm.#ctor" -->
        <member name="E:SiliconStudio.Xenko.Games.GameForm.AppActivated">
            <summary>
            Occurs when [app activated].
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameForm.AppDeactivated">
            <summary>
            Occurs when [app deactivated].
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameForm.PauseRendering">
            <summary>
            Occurs when [pause rendering].
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameForm.ResumeRendering">
            <summary>
            Occurs when [resume rendering].
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameForm.Screensaver">
            <summary>
            Occurs when [screensaver].
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameForm.SystemResume">
            <summary>
            Occurs when [system resume].
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameForm.SystemSuspend">
            <summary>
            Occurs when [system suspend].
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameForm.UserResized">
            <summary>
            Occurs when [user resized].
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameForm.FullscreenToggle">
            <summary>
            Occurs when alt-enter key combination has been pressed.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameForm.IsProcessingKeys">
            <summary>
            Gets or sets a value indicating whether this instance is processing keys. By default is <c>false</c>
            </summary>
            <value><c>true</c> if this instance is processing keys; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameForm.OnResizeBegin(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Form.ResizeBegin"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameForm.OnResizeEnd(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Form.ResizeEnd"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameForm.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameForm.OnPauseRendering(System.EventArgs)">
            <summary>
            Raises the Pause Rendering event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameForm.OnResumeRendering(System.EventArgs)">
            <summary>
            Raises the Resume Rendering event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameForm.OnUserResized(System.EventArgs)">
            <summary>
            Raises the User resized event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameForm.OnAppActivated(System.EventArgs)">
            <summary>
            Raises the On App Activated event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameForm.OnAppDeactivated(System.EventArgs)">
            <summary>
            Raises the App Deactivated event
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameForm.OnSystemSuspend(System.EventArgs)">
            <summary>
            Raises the System Suspend event
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameForm.OnSystemResume(System.EventArgs)">
            <summary>
            Raises the System Resume event
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameForm.OnScreensaver(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:Screensaver"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.CancelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameForm.OnFullscreenToggle(System.EventArgs)">
            <summary>
            Raises the FullScreenToggle event
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameForm.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Override windows message loop handling.
            </summary>
            <param name="m">The Windows <see cref="T:System.Windows.Forms.Message"/> to process.</param>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GameWindowWinforms">
            <summary>
            An abstract window.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameWindowWinforms.Visible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:SiliconStudio.Xenko.Games.GameWindow" /> is visible.
            </summary>
            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.Win32Native.NativeMessage">
            <summary>
            Internal class to interact with Native Message
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.WindowsMessageLoop">
            <summary>
            RenderLoop provides a rendering loop infrastructure. See remarks for usage. 
            </summary>
            <remarks>
            Use static <see cref="!:Run(System.Windows.Forms.Control,SharpDX.Windows.RenderLoop.RenderCallback)"/>  
            method to directly use a renderloop with a render callback or use your own loop:
            <code>
            control.Show();
            using (var loop = new RenderLoop(control))
            {
                while (loop.NextFrame())
                {
                   // Perform draw operations here.
                }
            }
            </code>
            Note that the main control can be changed at anytime inside the loop.
            </remarks>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.WindowsMessageLoop.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Games.WindowsMessageLoop"/> class.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.WindowsMessageLoop.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Games.WindowsMessageLoop"/> class.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.WindowsMessageLoop.Control">
            <summary>
            Gets or sets the control to associate with the current render loop.
            </summary>
            <value>The control.</value>
            <exception cref="T:System.InvalidOperationException">Control is already disposed</exception>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.WindowsMessageLoop.UseApplicationDoEvents">
            <summary>
            Gets or sets a value indicating whether the render loop should use the default <see cref="M:System.Windows.Forms.Application.DoEvents"/> instead of a custom window message loop lightweight for GC. Default is false.
            </summary>
            <value><c>true</c> if the render loop should use the default <see cref="M:System.Windows.Forms.Application.DoEvents"/> instead of a custom window message loop (default false); otherwise, <c>false</c>.</value>
            <remarks>By default, RenderLoop is using a custom window message loop that is more lightweight than <see cref="M:System.Windows.Forms.Application.DoEvents" /> to process windows event message. 
            Set this parameter to true to use the default <see cref="M:System.Windows.Forms.Application.DoEvents"/>.</remarks>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.WindowsMessageLoop.AllowWindowssKeys">
            <summary>
            Gets or sets a value indicating whether [allow windowss keys].
            </summary>
            <value><c>true</c> if [allow windowss keys]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.WindowsMessageLoop.NextFrame">
            <summary>
            Calls this method on each frame.
            </summary>
            <returns><c>true</c> if if the control is still active, <c>false</c> otherwise.</returns>
            <exception cref="T:System.InvalidOperationException">An error occurred </exception>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.WindowsMessageLoop.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.WindowsMessageLoop.RenderCallback">
            <summary>
            Delegate for the rendering loop.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.WindowsMessageLoop.Run(System.Windows.Forms.ApplicationContext,SiliconStudio.Xenko.Games.WindowsMessageLoop.RenderCallback)">
            <summary>
            Runs the specified main loop in the specified context.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.WindowsMessageLoop.Run(System.Windows.Forms.Control,SiliconStudio.Xenko.Games.WindowsMessageLoop.RenderCallback,System.Boolean)">
            <summary>
            Runs the specified main loop for the specified windows form.
            </summary>
            <param name="form">The form.</param>
            <param name="renderCallback">The rendering callback.</param>
            <param name="useApplicationDoEvents">if set to <c>true</c> indicating whether the render loop should use the default <see cref="M:System.Windows.Forms.Application.DoEvents"/> instead of a custom window message loop lightweight for GC. Default is false.</param>
            <exception cref="T:System.ArgumentNullException">form
            or
            renderCallback</exception>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GameBase">
            <summary>
            The game.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Games.GameBase" /> class.
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameBase.Activated">
            <summary>
            Occurs when [activated].
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameBase.Deactivated">
            <summary>
            Occurs when [deactivated].
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameBase.Exiting">
            <summary>
            Occurs when [exiting].
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameBase.WindowCreated">
            <summary>
            Occurs when [window created].
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameBase.UpdateTime">
            <summary>
            Gets the current update time from the start of the game.
            </summary>
            <value>The current update time.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameBase.DrawTime">
            <summary>
            Gets the current draw time from the start of the game.
            </summary>
            <value>The current update time.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameBase.DrawInterpolationFactor">
            <summary>
            Gets the draw interpolation factor, which is (<see cref="P:SiliconStudio.Xenko.Games.GameBase.UpdateTime"/> - <see cref="P:SiliconStudio.Xenko.Games.GameBase.DrawTime"/>) / <see cref="P:SiliconStudio.Xenko.Games.GameBase.TargetElapsedTime"/>.
            If <see cref="P:SiliconStudio.Xenko.Games.GameBase.IsFixedTimeStep"/> is false, it will be 0 as <see cref="P:SiliconStudio.Xenko.Games.GameBase.UpdateTime"/> and <see cref="P:SiliconStudio.Xenko.Games.GameBase.DrawTime"/> will be equal.
            </summary>
            <value>
            The draw interpolation factor.
            </value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameBase.PlayTime">
            <summary>
            Gets the play time, can be changed to match to the time of the current rendering scene.
            </summary>
            <value>The play time.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameBase.Content">
            <summary>
            Gets the <see cref="T:SiliconStudio.Core.Serialization.Assets.ContentManager"/>.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameBase.Asset">
            <summary>
            Gets the <see cref="T:SiliconStudio.Core.Serialization.Assets.ContentManager"/>.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameBase.GameSystems">
            <summary>
            Gets the game components registered by this game.
            </summary>
            <value>The game components.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameBase.Context">
            <summary>
            Gets the game context.
            </summary>
            <value>The game context.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameBase.GraphicsDevice">
            <summary>
            Gets the graphics device.
            </summary>
            <value>The graphics device.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameBase.InactiveSleepTime">
            <summary>
            Gets or sets the inactive sleep time.
            </summary>
            <value>The inactive sleep time.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameBase.IsActive">
            <summary>
            Gets a value indicating whether this instance is active.
            </summary>
            <value><c>true</c> if this instance is active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameBase.IsFixedTimeStep">
            <summary>
            Gets or sets a value indicating whether this instance is fixed time step.
            </summary>
            <value><c>true</c> if this instance is fixed time step; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameBase.ForceOneUpdatePerDraw">
            <summary>
            Gets or sets a value indicating whether this instance should force exactly one update step per one draw step
            </summary>
            <value><c>true</c> if this instance forces one update step per one draw step; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameBase.IsDrawDesynchronized">
            <summary>
            Gets or sets a value indicating whether draw can happen as fast as possible, even when <see cref="P:SiliconStudio.Xenko.Games.GameBase.IsFixedTimeStep"/> is set.
            </summary>
            <value><c>true</c> if this instance allows desychronized drawing; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameBase.IsMouseVisible">
            <summary>
            Gets or sets a value indicating whether the mouse should be visible.
            </summary>
            <value><c>true</c> if the mouse should be visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameBase.LaunchParameters">
            <summary>
            Gets the launch parameters.
            </summary>
            <value>The launch parameters.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameBase.IsRunning">
            <summary>
            Gets a value indicating whether is running.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameBase.Services">
            <summary>
            Gets the service container.
            </summary>
            <value>The service container.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameBase.TargetElapsedTime">
            <summary>
            Gets or sets the target elapsed time.
            </summary>
            <value>The target elapsed time.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameBase.Window">
            <summary>
            Gets the abstract window.
            </summary>
            <value>The window.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameBase.FullPlatformName">
            <summary>
            Gets the full name of the device this game is running if available
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameBase.Exit">
            <summary>
            Exits the game.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameBase.ResetElapsedTime">
            <summary>
            Resets the elapsed time counter.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameBase.Run(SiliconStudio.Xenko.Games.GameContext)">
            <summary>
            Call this method to initialize the game, begin running the game loop, and start processing events for the game.
            </summary>
            <param name="gameContext">The window Context for this game.</param>
            <exception cref="T:System.InvalidOperationException">Cannot run this instance while it is already running</exception>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameBase.PrepareContext">
            <summary>
            Creates or updates <see cref="P:SiliconStudio.Xenko.Games.GameBase.Context"/> before window and device are created.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameBase.SuppressDraw">
            <summary>
            Prevents calls to Draw until the next Update.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameBase.Tick">
            <summary>
            Updates the game's clock and calls Update and Draw.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameBase.BeginDraw">
            <summary>
            Starts the drawing of a frame. This method is followed by calls to Draw and EndDraw.
            </summary>
            <returns><c>true</c> to continue drawing, false to not call <see cref="M:SiliconStudio.Xenko.Games.GameBase.Draw(SiliconStudio.Xenko.Games.GameTime)"/> and <see cref="M:SiliconStudio.Xenko.Games.GameBase.EndDraw(System.Boolean)"/></returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameBase.BeginRun">
            <summary>
            Called after all components are initialized but before the first update in the game loop.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameBase.Draw(SiliconStudio.Xenko.Games.GameTime)">
            <summary>
            Reference page contains code sample.
            </summary>
            <param name="gameTime">
            Time passed since the last call to Draw.
            </param>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameBase.EndDraw(System.Boolean)">
            <summary>Ends the drawing of a frame. This method is preceeded by calls to Draw and BeginDraw.</summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameBase.EndRun">
            <summary>Called after the game loop has stopped running before exiting.</summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameBase.Initialize">
            <summary>Called after the Game and GraphicsDevice are created, but before LoadContent.  Reference page contains code sample.</summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameBase.OnActivated(System.Object,System.EventArgs)">
            <summary>
            Raises the Activated event. Override this method to add code to handle when the game gains focus.
            </summary>
            <param name="sender">The Game.</param>
            <param name="args">Arguments for the Activated event.</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameBase.OnDeactivated(System.Object,System.EventArgs)">
            <summary>
            Raises the Deactivated event. Override this method to add code to handle when the game loses focus.
            </summary>
            <param name="sender">The Game.</param>
            <param name="args">Arguments for the Deactivated event.</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameBase.OnExiting(System.Object,System.EventArgs)">
            <summary>
            Raises an Exiting event. Override this method to add code to handle when the game is exiting.
            </summary>
            <param name="sender">The Game.</param>
            <param name="args">Arguments for the Exiting event.</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameBase.ShowMissingRequirementMessage(System.Exception)">
            <summary>
            This is used to display an error message if there is no suitable graphics device or sound card.
            </summary>
            <param name="exception">The exception to display.</param>
            <returns>The <see cref="T:System.Boolean" />.</returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameBase.UnloadContent">
            <summary>
            Called when graphics resources need to be unloaded. Override this method to unload any game-specific graphics resources.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameBase.Update(SiliconStudio.Xenko.Games.GameTime)">
            <summary>
            Reference page contains links to related conceptual articles.
            </summary>
            <param name="gameTime">
            Time passed since the last call to Update.
            </param>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GameContextSDL">
            <summary>
            A <see cref="T:SiliconStudio.Xenko.Games.GameContext"/> to use for rendering to an existing SDL Window.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameContextSDL.#ctor(SiliconStudio.Xenko.Graphics.SDL.Window,System.Int32,System.Int32)">
            <inheritDoc/>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GameContextWindows`1">
            <summary>
            Common ancestor to all game contexts on the Windows platform.
            </summary>
            <typeparam name="TK"></typeparam>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameContextWindows`1.#ctor(`0,System.Int32,System.Int32)">
            <inheritDoc/>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GameContextWinforms">
            <summary>
            A <see cref="T:SiliconStudio.Xenko.Games.GameContext"/> to use for rendering to an existing WinForm <see cref="T:System.Windows.Forms.Control"/>.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameContextWinforms.#ctor(System.Windows.Forms.Control,System.Int32,System.Int32,System.Boolean)">
            <inheritDoc/>
            <param name="isUserManagingRun">Is user managing event processing of <paramref name="control"/>?</param>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameContextWinforms.IsUserManagingRun">
            <summary>
            The is running delegate
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameContextWinforms.RunCallback">
            <summary>
            Gets the run loop to be called when <see cref="P:SiliconStudio.Xenko.Games.GameContextWinforms.IsUserManagingRun"/> is true.
            </summary>
            <value>The run loop.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameContextWinforms.ExitCallback">
            <summary>
            Gets the exit callback to be called when <see cref="P:SiliconStudio.Xenko.Games.GameContextWinforms.IsUserManagingRun"/> is true when exiting the game.
            </summary>
            <value>The run loop.</value>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GameContext">
            <summary>
            Contains context used to render the game (Control for WinForm, a DrawingSurface for WP8...etc.).
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameContext.ContextType">
            <summary>
            Context type of this instance.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameContext.RequestedWidth">
            <summary>
            The requested width.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameContext.RequestedHeight">
            <summary>
            The requested height.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameContext.RequestedBackBufferFormat">
            <summary>
            The requested back buffer format.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameContext.RequestedDepthStencilFormat">
            <summary>
            The requested depth stencil format.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameContext.RequestedGraphicsProfile">
            <summary>
            THe requested graphics profiles.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameContext.DeviceCreationFlags">
            <summary>
            The device creation flags that will be used to create the <see cref="T:SiliconStudio.Xenko.Graphics.GraphicsDevice"/>.
            </summary>
            <value>The device creation flags.</value>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameContext.InitializeDatabase">
            <summary>
            Indicate whether the game must initialize the default database when it starts running.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameContext.ProductName">
            <summary>
            Product name of game.
            TODO: Provide proper access title through code and game studio
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameContext.ProductLocation">
            <summary>
            Product location of game.
            TODO: Only used for retrieving game's icon. See ProductName for future refactoring
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameContext.op_Implicit(System.Windows.Forms.Control)~SiliconStudio.Xenko.Games.GameContext">
            <summary>
            Performs an implicit conversion from <see cref="!:Control"/> to <see cref="T:SiliconStudio.Xenko.Games.GameContextWinforms"/>.
            </summary>
            <param name="control">Winform control</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GameContext`1">
            <summary>
            Generic version of <see cref="T:SiliconStudio.Xenko.Games.GameContext"/>. The later is used to describe a generic game Context.
            This version enables us to constraint the game context to a specifc toolkit and ensures a better cohesion
            between the various toolkit specific classes, such as InputManager, GameWindow.
            </summary>
            <typeparam name="TK"></typeparam>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameContext`1.Control">
            <summary>
            Underlying control associated with context.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameContext`1.#ctor(`0,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Games.GameContext" /> class.
            </summary>
            <param name="control">The control.</param>
            <param name="requestedWidth">Width of the requested.</param>
            <param name="requestedHeight">Height of the requested.</param>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GameContextFactory">
            <summary>
            Given a <see cref="T:SiliconStudio.Xenko.Games.AppContextType"/> creates the corresponding GameContext instance based on the current executing platform.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameContextFactory.NewGameContext(SiliconStudio.Xenko.Games.AppContextType)">
            <summary>
            Given a <paramref name="type"/> create the appropriate game Context for the current executing platform.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GameGraphicsParameters">
            <summary>
              Describess how data will be displayed to the screen.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameGraphicsParameters.PreferredBackBufferWidth">
            <summary>
              A value that describes the resolution width.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameGraphicsParameters.PreferredBackBufferHeight">
            <summary>
              A value that describes the resolution height.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameGraphicsParameters.PreferredBackBufferFormat">
            <summary>
              A <strong><see cref="T:SharpDX.DXGI.Format" /></strong> structure describing the display format.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameGraphicsParameters.PreferredDepthStencilFormat">
            <summary>
            Gets or sets the depth stencil format
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameGraphicsParameters.IsFullScreen">
            <summary>
              Gets or sets a value indicating whether the application is in full screen mode.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameGraphicsParameters.PreferredFullScreenOutputIndex">
            <summary>
            The output (monitor) index to use when switching to fullscreen mode. Doesn't have any effect when windowed mode is used.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameGraphicsParameters.PreferredGraphicsProfile">
            <summary>
            Gets or sets the minimum graphics profile.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameGraphicsParameters.PreferredRefreshRate">
            <summary>
            The preferred refresh rate
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameGraphicsParameters.PreferredMultiSampleLevel">
            <summary>
              Gets or sets a value indicating the number of sample locations during multisampling.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameGraphicsParameters.SynchronizeWithVerticalRetrace">
            <summary>
            Gets or sets a value indicating whether to synochrnize present with vertical blanking.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameGraphicsParameters.ColorSpace">
            <summary>
            Gets or sets the colorspace.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameGraphicsParameters.RequiredAdapterUid">
            <summary>
            If populated the engine will try to initialize the device with the same unique id
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GameProfilingKeys">
            <summary>
            Keys used for profiling the game class.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameProfilingKeys.GameInitialize">
            <summary>
            Profiling initialization of a Game instance.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameProfilingKeys.GameLoadContent">
            <summary>
            Profiling load content of a Game instance.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameProfilingKeys.GameSystemInitialize">
            <summary>
            Profiling initialization of a <see cref="T:SiliconStudio.Xenko.Games.IGameSystemBase"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameProfilingKeys.GameSystemLoadContent">
            <summary>
            Profiling LoadContent of a <see cref="T:SiliconStudio.Xenko.Games.IGameSystemBase"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameProfilingKeys.GameDraw">
            <summary>
            Profiling Draw() method of a <see cref="T:SiliconStudio.Xenko.Games.GameBase"/>. This profiling is only used through markers published every seconds.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameProfilingKeys.GameEndDraw">
            <summary>
            Profiling EndDraw() method of a <see cref="T:SiliconStudio.Xenko.Games.GameBase"/>. This profiling is only used through markers published every seconds.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameProfilingKeys.GameUpdate">
            <summary>
            Profiling Update() method of a <see cref="T:SiliconStudio.Xenko.Games.GameBase"/>. This profiling is only used through markers published every seconds.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameProfilingKeys.GameDrawFPS">
            <summary>
            Profiling Draw() method of a <see cref="T:SiliconStudio.Xenko.Games.GameBase"/>. This profiling is only used through markers published every seconds.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameProfilingKeys.ObjectDatabaseInitialize">
            <summary>
            Profiling Object Database initialization.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameProfilingKeys.EntityProcessorInitialize">
            <summary>
            Profiling Entity processors initialization.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GameSystemBase">
            <summary>
            Base class for a <see cref="T:SiliconStudio.Xenko.Games.GameSystemBase"/> component.
            </summary>
            <remarks>
            A <see cref="T:SiliconStudio.Xenko.Games.GameSystemBase"/> component can be used to 
            </remarks>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameSystemBase.#ctor(SiliconStudio.Core.IServiceRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Games.GameSystemBase" /> class.
            </summary>
            <param name="registry">The registry.</param>
            <remarks>
            The GameSystem is expecting the following services to be registered: <see cref="T:SiliconStudio.Xenko.Games.IGame"/> and <see cref="T:SiliconStudio.Core.Serialization.Assets.IAssetManager"/>.
            </remarks>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameSystemBase.Game">
            <summary>
            Gets the <see cref="P:SiliconStudio.Xenko.Games.GameSystemBase.Game"/> associated with this <see cref="T:SiliconStudio.Xenko.Games.GameSystemBase"/>. This value can be null in a mock environment.
            </summary>
            <value>The game.</value>
            <remarks>This value can be null</remarks>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameSystemBase.Services">
            <summary>
            Gets the services registry.
            </summary>
            <value>The services registry.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameSystemBase.Asset">
            <summary>
            Gets the content manager.
            </summary>
            <value>The content.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameSystemBase.GraphicsDevice">
            <summary>
            Gets the graphics device.
            </summary>
            <value>The graphics device.</value>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GameSystemCollection">
            <summary>A collection of game components.</summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameSystemCollection.State">
            <summary>
            Gets the state of this game system collection.
            </summary>
            <value>
            The state of this game system collection.
            </value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameSystemCollection.IsFirstUpdateDone">
            <summary>
            Gets a value indicating whether first update has been done.
            </summary>
            <value>
              <c>true</c> if first update has been done; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameSystemCollection.Update(SiliconStudio.Xenko.Games.GameTime)">
            <summary>
            Reference page contains links to related conceptual articles.
            </summary>
            <param name="gameTime">
            Time passed since the last call to Update.
            </param>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameSystemCollection.Draw(SiliconStudio.Xenko.Games.GameTime)">
            <summary>
            Reference page contains code sample.
            </summary>
            <param name="gameTime">
            Time passed since the last call to Draw.
            </param>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameSystemCollection.LoadContent">
            <summary>
            Loads the content.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameSystemCollection.UnloadContent">
            <summary>
            Called when graphics resources need to be unloaded. Override this method to unload any game-specific graphics resources.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GameSystemCollection.DrawableComparer">
            <summary>
            The comparer used to order <see cref="T:SiliconStudio.Xenko.Games.IDrawable"/> objects.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GameSystemCollection.UpdateableComparer">
            <summary>
            The comparer used to order <see cref="T:SiliconStudio.Xenko.Games.IUpdateable"/> objects.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GameSystemState">
            <summary>
            Describes state of the GameSystemCollection.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GameTime">
            <summary>
            Current timing used for variable-step (real time) or fixed-step (game time) games.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameTime.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Games.GameTime" /> class.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameTime.#ctor(System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Games.GameTime" /> class.
            </summary>
            <param name="totalTime">The total game time since the start of the game.</param>
            <param name="elapsedTime">The elapsed game time since the last update.</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameTime.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Games.GameTime" /> class.
            </summary>
            <param name="totalTime">The total game time since the start of the game.</param>
            <param name="elapsedTime">The elapsed game time since the last update.</param>
            <param name="isRunningSlowly">True if the game is running unexpectedly slowly.</param>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameTime.Elapsed">
            <summary>
            Gets the elapsed game time since the last update
            </summary>
            <value>The elapsed game time.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameTime.IsRunningSlowly">
            <summary>
            Gets a value indicating whether the game is running slowly than its TargetElapsedTime. This can be used for example to render less details...etc.
            </summary>
            <value><c>true</c> if this instance is running slowly; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameTime.Total">
            <summary>
            Gets the amount of game time since the start of the game.
            </summary>
            <value>The total game time.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameTime.FrameCount">
            <summary>
            Gets the current frame count since the start of the game.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameTime.FramePerSecond">
            <summary>
            Gets the number of frame per second (FPS) for the current running game.
            </summary>
            <value>The frame per second.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameTime.TimePerFrame">
            <summary>
            Gets the time per frame.
            </summary>
            <value>The time per frame.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameTime.FramePerSecondUpdated">
            <summary>
            Gets a value indicating whether the <see cref="P:SiliconStudio.Xenko.Games.GameTime.FramePerSecond"/> and <see cref="P:SiliconStudio.Xenko.Games.GameTime.TimePerFrame"/> were updated for this frame.
            </summary>
            <value><c>true</c> if the <see cref="P:SiliconStudio.Xenko.Games.GameTime.FramePerSecond"/> and <see cref="P:SiliconStudio.Xenko.Games.GameTime.TimePerFrame"/> were updated for this frame; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameUnhandledExceptionEventArgs.#ctor(System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Games.GameUnhandledExceptionEventArgs"/> class.
            </summary>
            <param name="exceptionObject">The exception object.</param>
            <param name="isTerminating">if set to <c>true</c> [is terminating].</param>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameUnhandledExceptionEventArgs.ExceptionObject">
            <summary>
            Gets the unhandled exception object.
            </summary>
            <value>
            The unhandled exception object.
            </value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameUnhandledExceptionEventArgs.IsTerminating">
            <summary>
            Gets a value indicating whether the CLR is terminating.
            </summary>
            <value>
              <c>true</c> if CLR is terminating; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GameWindow">
            <summary>
            An abstract window.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GameWindow.IsActivated">
            <summary>
            Indicate if the window is currently activated.
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameWindow.Activated">
            <summary>
            Occurs when this window is activated.
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameWindow.ClientSizeChanged">
            <summary>
            Occurs, when device client size is changed.
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameWindow.Deactivated">
            <summary>
            Occurs when this window is deactivated.
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameWindow.OrientationChanged">
            <summary>
            Occurs, when device orientation is changed.
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameWindow.FullscreenToggle">
            <summary>
            Occurs, when device full screen mode is toggled.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameWindow.AllowUserResizing">
            <summary>
            Gets or sets, user possibility to resize this window.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameWindow.ClientBounds">
            <summary>
            Gets the client bounds.
            </summary>
            <value>The client bounds.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameWindow.CurrentOrientation">
            <summary>
            Gets the current orientation.
            </summary>
            <value>The current orientation.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameWindow.IsMinimized">
            <summary>
            Gets a value indicating whether this instance is minimized.
            </summary>
            <value><c>true</c> if this instance is minimized; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameWindow.IsMouseVisible">
            <summary>
            Gets or sets a value indicating whether the mouse pointer is visible over this window.
            </summary>
            <value><c>true</c> if this instance is mouse visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameWindow.NativeWindow">
            <summary>
            Gets the native window.
            </summary>
            <value>The native window.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameWindow.Visible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:SiliconStudio.Xenko.Games.GameWindow" /> is visible.
            </summary>
            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameWindow.Position">
            <summary>
            Gets or sets the position of the window on the screen.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameWindow.IsBorderLess">
            <summary>
            Gets or sets a value indicating whether this window has a border
            </summary>
            <value><c>true</c> if this window has a border; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameWindow.Title">
            <summary>
            Gets or sets the title of the window.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GameWindowRenderer">
            <summary>
            A GameSystem that allows to draw to another window or control. Currently only valid on desktop with Windows.Forms.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameWindowRenderer.#ctor(SiliconStudio.Core.IServiceRegistry,SiliconStudio.Xenko.Games.GameContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Games.GameWindowRenderer" /> class.
            </summary>
            <param name="registry">The registry.</param>
            <param name="gameContext">The window context.</param>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameWindowRenderer.GameContext">
            <summary>
            Gets the underlying native window.
            </summary>
            <value>The underlying native window.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameWindowRenderer.Window">
            <summary>
            Gets the window.
            </summary>
            <value>The window.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameWindowRenderer.Presenter">
            <summary>
            Gets or sets the presenter.
            </summary>
            <value>The presenter.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameWindowRenderer.PreferredBackBufferFormat">
            <summary>
            Gets or sets the preferred back buffer format.
            </summary>
            <value>The preferred back buffer format.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameWindowRenderer.PreferredBackBufferHeight">
            <summary>
            Gets or sets the height of the preferred back buffer.
            </summary>
            <value>The height of the preferred back buffer.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameWindowRenderer.PreferredBackBufferWidth">
            <summary>
            Gets or sets the width of the preferred back buffer.
            </summary>
            <value>The width of the preferred back buffer.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameWindowRenderer.PreferredDepthStencilFormat">
            <summary>
            Gets or sets the preferred depth stencil format.
            </summary>
            <value>The preferred depth stencil format.</value>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GraphicsDeviceInformation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Games.GraphicsDeviceInformation" /> class.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GraphicsDeviceInformation.Adapter">
            <summary>
            Gets or sets the adapter.
            </summary>
            <value>The adapter.</value>
            <exception cref="T:System.ArgumentNullException">if value is null</exception>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GraphicsDeviceInformation.GraphicsProfile">
            <summary>
            Gets or sets the graphics profile.
            </summary>
            <value>The graphics profile.</value>
            <exception cref="T:System.ArgumentNullException">if value is null</exception>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GraphicsDeviceInformation.PresentationParameters">
            <summary>
            Gets or sets the presentation parameters.
            </summary>
            <value>The presentation parameters.</value>
            <exception cref="T:System.ArgumentNullException">if value is null</exception>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GraphicsDeviceInformation.DeviceCreationFlags">
            <summary>
            Gets or sets the creation flags.
            </summary>
            <value>The creation flags.</value>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GraphicsDeviceInformation.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A new copy-instance of this GraphicsDeviceInformation.</returns>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GraphicsDeviceManager">
            <summary>
            Manages the <see cref="P:SiliconStudio.Xenko.Games.GraphicsDeviceManager.GraphicsDevice"/> lifecycle.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GraphicsDeviceManager.DefaultBackBufferWidth">
            <summary>
            Default width for the back buffer.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GraphicsDeviceManager.DefaultBackBufferHeight">
            <summary>
            Default height for the back buffer.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GraphicsDeviceManager.#ctor(SiliconStudio.Xenko.Games.GameBase)">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Games.GraphicsDeviceManager" /> class.
            </summary>
            <param name="game">The game.</param>
            <exception cref="T:System.ArgumentNullException">The game instance cannot be null.</exception>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GraphicsDeviceManager.PreferredGraphicsProfile">
            <summary>
            Gets or sets the list of graphics profile to select from the best feature to the lower feature. See remarks.
            </summary>
            <value>The graphics profile.</value>
            <remarks>
            By default, the PreferredGraphicsProfile is set to { <see cref="F:SiliconStudio.Xenko.Graphics.GraphicsProfile.Level_11_1"/>, 
            <see cref="F:SiliconStudio.Xenko.Graphics.GraphicsProfile.Level_11_0"/>,
            <see cref="F:SiliconStudio.Xenko.Graphics.GraphicsProfile.Level_10_1"/>,
            <see cref="F:SiliconStudio.Xenko.Graphics.GraphicsProfile.Level_10_0"/>,
            <see cref="F:SiliconStudio.Xenko.Graphics.GraphicsProfile.Level_9_3"/>,
            <see cref="F:SiliconStudio.Xenko.Graphics.GraphicsProfile.Level_9_2"/>,
            <see cref="F:SiliconStudio.Xenko.Graphics.GraphicsProfile.Level_9_1"/>}
            </remarks>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GraphicsDeviceManager.ShaderProfile">
            <summary>
            Gets or sets the shader graphics profile that will be used to compile shaders. See remarks.
            </summary>
            <value>The shader graphics profile.</value>
            <remarks>If this property is not set, the profile used to compile the shader will be taken from the <see cref="P:SiliconStudio.Xenko.Games.GraphicsDeviceManager.GraphicsDevice"/> 
            based on the list provided by <see cref="P:SiliconStudio.Xenko.Games.GraphicsDeviceManager.PreferredGraphicsProfile"/></remarks>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GraphicsDeviceManager.DeviceCreationFlags">
            <summary>
            Gets or sets the device creation flags that will be used to create the <see cref="P:SiliconStudio.Xenko.Games.GraphicsDeviceManager.GraphicsDevice"/>
            </summary>
            <value>The device creation flags.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GraphicsDeviceManager.RequiredAdapterUid">
            <summary>
            If populated the engine will try to initialize the device with the same unique id
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GraphicsDeviceManager.PreferredColorSpace">
            <summary>
            Gets or sets the default color space.
            </summary>
            <value>The default color space.</value>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GraphicsDeviceManager.SetPreferredGraphicsProfile(SiliconStudio.Xenko.Graphics.GraphicsProfile[])">
            <summary>
            Sets the preferred graphics profile.
            </summary>
            <param name="levels">The levels.</param>
            <seealso cref="P:SiliconStudio.Xenko.Games.GraphicsDeviceManager.PreferredGraphicsProfile"/>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GraphicsDeviceManager.IsFullScreen">
            <summary>
            Gets or sets a value indicating whether this instance is full screen.
            </summary>
            <value><c>true</c> if this instance is full screen; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GraphicsDeviceManager.PreferredMultiSampleLevel">
            <summary>
            Gets or sets a value indicating whether [prefer multi sampling].
            </summary>
            <value><c>true</c> if [prefer multi sampling]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GraphicsDeviceManager.PreferredBackBufferFormat">
            <summary>
            Gets or sets the preferred back buffer format.
            </summary>
            <value>The preferred back buffer format.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GraphicsDeviceManager.PreferredBackBufferHeight">
            <summary>
            Gets or sets the height of the preferred back buffer.
            </summary>
            <value>The height of the preferred back buffer.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GraphicsDeviceManager.PreferredBackBufferWidth">
            <summary>
            Gets or sets the width of the preferred back buffer.
            </summary>
            <value>The width of the preferred back buffer.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GraphicsDeviceManager.PreferredDepthStencilFormat">
            <summary>
            Gets or sets the preferred depth stencil format.
            </summary>
            <value>The preferred depth stencil format.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GraphicsDeviceManager.PreferredRefreshRate">
            <summary>
            Gets or sets the preferred refresh rate.
            </summary>
            <value>The preferred refresh rate.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GraphicsDeviceManager.PreferredFullScreenOutputIndex">
            <summary>
            The output (monitor) index to use when switching to fullscreen mode. Doesn't have any effect when windowed mode is used.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GraphicsDeviceManager.SupportedOrientations">
            <summary>
            Gets or sets the supported orientations.
            </summary>
            <value>The supported orientations.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GraphicsDeviceManager.SynchronizeWithVerticalRetrace">
            <summary>
            Gets or sets a value indicating whether [synchronize with vertical retrace].
            </summary>
            <value><c>true</c> if [synchronize with vertical retrace]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GraphicsDeviceManager.ApplyChanges">
            <summary>
            Applies the changes from this instance and change or create the <see cref="P:SiliconStudio.Xenko.Games.GraphicsDeviceManager.GraphicsDevice"/> according to the new values.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GraphicsDeviceManager.CanResetDevice(SiliconStudio.Xenko.Games.GraphicsDeviceInformation)">
            <summary>
            Determines whether this instance is compatible with the the specified new <see cref="T:SiliconStudio.Xenko.Games.GraphicsDeviceInformation"/>.
            </summary>
            <param name="newDeviceInfo">The new device info.</param>
            <returns><c>true</c> if this instance this instance is compatible with the the specified new <see cref="T:SiliconStudio.Xenko.Games.GraphicsDeviceInformation"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GraphicsDeviceManager.FindBestDevice(System.Boolean)">
            <summary>
            Finds the best device that is compatible with the preferences defined in this instance.
            </summary>
            <param name="anySuitableDevice">if set to <c>true</c> a device can be selected from any existing adapters, otherwise, it will select only from default adapter.</param>
            <returns>The graphics device information.</returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GraphicsDeviceManager.RankDevices(System.Collections.Generic.List{SiliconStudio.Xenko.Games.GraphicsDeviceInformation})">
            <summary>
            Ranks a list of <see cref="T:SiliconStudio.Xenko.Games.GraphicsDeviceInformation"/> before creating a new device.
            </summary>
            <param name="foundDevices">The list of devices that can be reorder.</param>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GraphicsDeviceManagerProfilingKeys">
            <summary>
            Profiling keys for <see cref="F:SiliconStudio.Xenko.Games.GraphicsDeviceManagerProfilingKeys.GraphicsDeviceManager"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Games.GraphicsDeviceManagerProfilingKeys.CreateDevice">
            <summary>
            Profiling graphics device initialization.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.IContentable">
            <summary>
            An interface to load and unload asset.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.IContentable.LoadContent">
            <summary>
            Loads the assets.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.IContentable.UnloadContent">
            <summary>
            Called when graphics resources need to be unloaded. Override this method to unload any game-specific graphics resources.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.IDrawable">
            <summary>
            An interface for a drawable game component that is called by the <see cref="T:SiliconStudio.Xenko.Games.GameBase"/> class.
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.IDrawable.DrawOrderChanged">
            <summary>
            Occurs when the <see cref="P:SiliconStudio.Xenko.Games.IDrawable.DrawOrder"/> property changes.
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.IDrawable.VisibleChanged">
            <summary>
            Occurs when the <see cref="P:SiliconStudio.Xenko.Games.IDrawable.Visible"/> property changes.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.IDrawable.BeginDraw">
            <summary>
            Starts the drawing of a frame. This method is followed by calls to Draw and EndDraw.
            </summary>
            <returns><c>true</c> if Draw should occur, <c>false</c> otherwise</returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.IDrawable.Draw(SiliconStudio.Xenko.Games.GameTime)">
            <summary>
            Draws this instance.
            </summary>
            <param name="gameTime">The current timing.</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.IDrawable.EndDraw">
            <summary>
            Ends the drawing of a frame. This method is preceeded by calls to Draw and BeginDraw.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IDrawable.Visible">
            <summary>
            Gets a value indicating whether the <see cref="M:SiliconStudio.Xenko.Games.IDrawable.Draw(SiliconStudio.Xenko.Games.GameTime)"/> method should be called by <see cref="M:SiliconStudio.Xenko.Games.GameBase.Draw(SiliconStudio.Xenko.Games.GameTime)"/>.
            </summary>
            <value><c>true</c> if this drawable component is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IDrawable.DrawOrder">
            <summary>
            Gets the draw order relative to other objects. <see cref="T:SiliconStudio.Xenko.Games.IDrawable"/> objects with a lower value are drawn first.
            </summary>
            <value>The draw order.</value>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.IGame.Activated">
            <summary>
            Occurs when [activated].
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.IGame.Deactivated">
            <summary>
            Occurs when [deactivated].
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.IGame.Exiting">
            <summary>
            Occurs when [exiting].
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.IGame.WindowCreated">
            <summary>
            Occurs when [window created].
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGame.UpdateTime">
            <summary>
            Gets the current game time.
            </summary>
            <value>The current game time.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGame.DrawTime">
            <summary>
            Gets the current draw time.
            </summary>
            <value>The current draw time.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGame.DrawInterpolationFactor">
            <summary>
            Gets the draw interpolation factor, which is (<see cref="P:SiliconStudio.Xenko.Games.IGame.UpdateTime"/> - <see cref="P:SiliconStudio.Xenko.Games.IGame.DrawTime"/>) / <see cref="P:SiliconStudio.Xenko.Games.IGame.TargetElapsedTime"/>.
            If <see cref="P:SiliconStudio.Xenko.Games.IGame.IsFixedTimeStep"/> is false, it will be 0 as <see cref="P:SiliconStudio.Xenko.Games.IGame.UpdateTime"/> and <see cref="P:SiliconStudio.Xenko.Games.IGame.DrawTime"/> will be equal.
            </summary>
            <value>
            The draw interpolation factor.
            </value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGame.PlayTime">
            <summary>
            Gets the play time, can be changed to match to the time of the current rendering scene.
            </summary>
            <value>The play time.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGame.Content">
            <summary>
            Gets or sets the <see cref="T:SiliconStudio.Core.Serialization.Assets.ContentManager"/>.
            </summary>
            <value>The content manager.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGame.GameSystems">
            <summary>
            Gets the game components registered by this game.
            </summary>
            <value>The game components.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGame.Context">
            <summary>
            Gets the game context.
            </summary>
            <value>The game context.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGame.GraphicsDevice">
            <summary>
            Gets the graphics device.
            </summary>
            <value>The graphics device.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGame.GraphicsContext">
            <summary>
            Gets the graphics context.
            </summary>
            <value>The graphics context.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGame.InactiveSleepTime">
            <summary>
            Gets or sets the inactive sleep time.
            </summary>
            <value>The inactive sleep time.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGame.IsActive">
            <summary>
            Gets a value indicating whether this instance is active.
            </summary>
            <value><c>true</c> if this instance is active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGame.IsFixedTimeStep">
            <summary>
            Gets or sets a value indicating whether this instance is fixed time step.
            </summary>
            <value><c>true</c> if this instance is fixed time step; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGame.IsDrawDesynchronized">
            <summary>
            Gets or sets a value indicating whether draw can happen as fast as possible, even when <see cref="P:SiliconStudio.Xenko.Games.IGame.IsFixedTimeStep"/> is set.
            </summary>
            <value><c>true</c> if this instance allows desychronized drawing; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGame.IsMouseVisible">
            <summary>
            Gets or sets a value indicating whether the mouse should be visible.
            </summary>
            <value><c>true</c> if the mouse should be visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGame.LaunchParameters">
            <summary>
            Gets the launch parameters.
            </summary>
            <value>The launch parameters.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGame.IsRunning">
            <summary>
            Gets a value indicating whether is running.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGame.Services">
            <summary>
            Gets the service container.
            </summary>
            <value>The service container.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGame.TargetElapsedTime">
            <summary>
            Gets or sets the target elapsed time.
            </summary>
            <value>The target elapsed time.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGame.Window">
            <summary>
            Gets the abstract window.
            </summary>
            <value>The window.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGame.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>The state.</value>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.IGamePlatform">
            <summary>
            Interface for a game platform (OS, machine dependent).
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGamePlatform.DefaultAppDirectory">
            <summary>
            Gets the default app directory.
            </summary>
            <value>The default app directory.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IGamePlatform.MainWindow">
            <summary>
            Gets the main window.
            </summary>
            <value>The main window.</value>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.IGamePlatform.CreateWindow(SiliconStudio.Xenko.Games.GameContext)">
            <summary>
            Creates the a new <see cref="T:SiliconStudio.Xenko.Games.GameWindow"/>. See remarks.
            </summary>
            <param name="gameContext">The window context. See remarks.</param>
            <returns>A new game window.</returns>
            <remarks>
            This is currently only supported on Windows Desktop. The window context supported on windows is a subclass of System.Windows.Forms.Control (or null and a default GameForm will be created).
            </remarks>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.IGameSystemBase">
            <summary>
            Defines a generic game system.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.IGameSystemBase.Initialize">
            <summary>
            This method is called when the component is added to the game.
            </summary>
            <remarks>
            This method can be used for tasks like querying for services the component needs and setting up non-graphics resources.
            </remarks>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.IGameSystemCollection">
            <summary>
            A list of game systems.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.IGraphicsDeviceManager">
            <summary>
            Defines the interface for an object that manages a GraphicsDevice.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.IGraphicsDeviceManager.BeginDraw">
            <summary>
            Starts the drawing of a frame.
            </summary>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.IGraphicsDeviceManager.CreateDevice">
            <summary>
            Called to ensure that the device manager has created a valid device.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.IGraphicsDeviceManager.EndDraw(System.Boolean)">
            <summary>
            Called by the game at the end of drawing; if requested, presents the final rendering.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.IUpdateable">
            <summary>
            An interface that is called by <see cref="M:SiliconStudio.Xenko.Games.GameBase.Update(SiliconStudio.Xenko.Games.GameTime)"/>.
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.IUpdateable.EnabledChanged">
            <summary>
            Occurs when the <see cref="P:SiliconStudio.Xenko.Games.IUpdateable.Enabled"/> property changes.
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.IUpdateable.UpdateOrderChanged">
            <summary>
            Occurs when the <see cref="P:SiliconStudio.Xenko.Games.IUpdateable.UpdateOrder"/> property changes.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.IUpdateable.Update(SiliconStudio.Xenko.Games.GameTime)">
            <summary>
            This method is called when this game component is updated.
            </summary>
            <param name="gameTime">The current timing.</param>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IUpdateable.Enabled">
            <summary>
            Gets a value indicating whether the game component's Update method should be called by <see cref="M:SiliconStudio.Xenko.Games.GameBase.Update(SiliconStudio.Xenko.Games.GameTime)"/>.
            </summary>
            <value><c>true</c> if update is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.IUpdateable.UpdateOrder">
            <summary>
            Gets the update order relative to other game components. Lower values are updated first.
            </summary>
            <value>The update order.</value>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.LaunchParameters">
            <summary>
            Parameters used when launching an application.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.LaunchParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Games.LaunchParameters" /> class.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.ListBoundExtensions">
            <summary>
            Helper functions to determine lower and upper bounds in a sorted list.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.NamespaceDoc">
            <summary>
            The <see cref="N:SiliconStudio.Xenko.Games"/> namespace provides a high level Game API.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.PreparingDeviceSettingsEventArgs">
            <summary>
            Describes settings to apply before preparing a device for creation, used by <see cref="M:SiliconStudio.Xenko.Games.GraphicsDeviceManager.OnPreparingDeviceSettings(System.Object,SiliconStudio.Xenko.Games.PreparingDeviceSettingsEventArgs)"/>.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.PreparingDeviceSettingsEventArgs.#ctor(SiliconStudio.Xenko.Games.GraphicsDeviceInformation)">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Games.PreparingDeviceSettingsEventArgs" /> class.
            </summary>
            <param name="graphicsDeviceInformation">The graphics device information.</param>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.PreparingDeviceSettingsEventArgs.GraphicsDeviceInformation">
            <summary>
            Gets the graphics device information.
            </summary>
            <value>The graphics device information.</value>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GameFormSDL">
            <summary>
            Default Rendering Form on SDL based applications.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameFormSDL.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Games.GameForm"/> class.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.GameFormSDL.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Games.GameForm"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameFormSDL.AppActivated">
            <summary>
            Occurs when [app activated].
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameFormSDL.AppDeactivated">
            <summary>
            Occurs when [app deactivated].
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameFormSDL.PauseRendering">
            <summary>
            Occurs when [pause rendering].
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameFormSDL.ResumeRendering">
            <summary>
            Occurs when [resume rendering].
            </summary>
        </member>
        <member name="E:SiliconStudio.Xenko.Games.GameFormSDL.UserResized">
            <summary>
            Occurs when [user resized].
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.GameWindowSDL">
            <summary>
            An abstract window.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.GameWindowSDL.Visible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:SiliconStudio.Xenko.Games.GameWindow" /> is visible.
            </summary>
            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.Time.AbsoluteStopwatch">
            <summary>
            Represent an absolute time measurement stopwatch. (with as few internal overhead as possible)
            It measures elapsed time in seconds between calls to Start method and Elapsed property.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.Time.AbsoluteStopwatch.Start">
            <summary>
            Start the stopwatch. (use this method also to restart stopwatching)
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.Time.AbsoluteStopwatch.Elapsed">
            <summary>
            Gets the time elapsed since previous call to Start method, in seconds.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.Time.TimerTick">
            <summary>
            This provides timing information similar to <see cref="T:System.Diagnostics.Stopwatch"/> but an update occurring only on a <see cref="M:SiliconStudio.Xenko.Games.Time.TimerTick.Tick"/> method.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.Time.TimerTick.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Games.Time.TimerTick"/> class.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.Time.TimerTick.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Games.Time.TimerTick" /> class.
            </summary>
            <param name="startTime">The start time.</param>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.Time.TimerTick.StartTime">
            <summary>
            Gets the start time when this timer was created.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.Time.TimerTick.TotalTime">
            <summary>
            Gets the total time elasped since the last reset or when this timer was created.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.Time.TimerTick.TotalTimeWithPause">
            <summary>
            Gets the total time elasped since the last reset or when this timer was created, including <see cref="M:SiliconStudio.Xenko.Games.Time.TimerTick.Pause"/>
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.Time.TimerTick.ElapsedTime">
            <summary>
            Gets the elapsed time since the previous call to <see cref="M:SiliconStudio.Xenko.Games.Time.TimerTick.Tick"/>.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.Time.TimerTick.ElapsedTimeWithPause">
            <summary>
            Gets the elapsed time since the previous call to <see cref="M:SiliconStudio.Xenko.Games.Time.TimerTick.Tick"/> including <see cref="M:SiliconStudio.Xenko.Games.Time.TimerTick.Pause"/>
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.Time.TimerTick.SpeedFactor">
            <summary>
            Gets or sets the speed factor. Default is 1.0
            </summary>
            <value>The speed factor.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.Time.TimerTick.IsPaused">
            <summary>
            Gets a value indicating whether this instance is paused.
            </summary>
            <value><c>true</c> if this instance is paused; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.Time.TimerTick.Reset">
            <summary>
            Resets this instance. <see cref="P:SiliconStudio.Xenko.Games.Time.TimerTick.TotalTime"/> is set to zero.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.Time.TimerTick.Reset(System.TimeSpan)">
            <summary>
            Resets this instance. <see cref="P:SiliconStudio.Xenko.Games.Time.TimerTick.TotalTime" /> is set to startTime.
            </summary>
            <param name="startTime">The start time.</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.Time.TimerTick.Resume">
            <summary>
            Resumes this instance, only if a call to <see cref="M:SiliconStudio.Xenko.Games.Time.TimerTick.Pause"/> has been already issued.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.Time.TimerTick.Tick">
            <summary>
            Update the <see cref="P:SiliconStudio.Xenko.Games.Time.TimerTick.TotalTime"/> and <see cref="P:SiliconStudio.Xenko.Games.Time.TimerTick.ElapsedTime"/>,
            </summary>
            <remarks>
            This method must be called on a regular basis at every *tick*.
            </remarks>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.Time.TimerTick.Pause">
            <summary>
            Pauses this instance.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Games.Time.TimerTick.ConvertRawToTimestamp(System.Int64)">
            <summary>
            Converts a <see cref="T:System.Diagnostics.Stopwatch" /> raw time to a <see cref="T:System.TimeSpan" />.
            </summary>
            <param name="delta">The delta.</param>
            <returns>The <see cref="T:System.TimeSpan" />.</returns>
        </member>
        <member name="T:SiliconStudio.Xenko.Games.Resources.GameResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.Resources.GameResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.Resources.GameResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Games.Resources.GameResources.Logo">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
    </members>
</doc>
