/**************************
***** Compiler Parameters *****
***************************
@P EffectName: LambertianPrefilteringSHNoComputeEffectPass1
@P   - SphericalHarmonicsParameters.HarmonicsOrder: 3
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id80 => SpriteBase.MatrixTransform
cbuffer Globals [Size: 96]
@C    Texture0TexelSize_id22 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id24 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id26 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id28 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id30 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id32 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id34 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id36 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id38 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id40 => Texturing.Texture9TexelSize
@C    CoefficientIndex_id83 => LambertianPrefilteringSHNoComputePass1.CoefficientIndex
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    PointSampler_id50 => Texturing.PointSampler [Stage: Pixel, Slot: (0-0)]
@R    RadianceMap_id82 => LambertianPrefilteringSHNoComputePass1.RadianceMap [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    LambertianPrefilteringSHNoComputePass1 => d60112a8e78434c6030558ff533208b2
@S    ImageEffectShader => 31376a3f3da836cbe499b1374d52b9a7
@S    SpriteBase => a411b8f5112d9bc821268e8c81e1a94c
@S    ShaderBase => 5c3160ccbf936c5e102bd9315f0f946a
@S    ShaderBaseStream => f699080594ac63c1f38140de57ce1a7b
@S    Texturing => a9d9ee1fb9a68af7ce6b12291686faea
@S    SphericalHarmonicsBase => 7840d35d4747ead6cee8ee52acf476a2
@S    Math => 5bdf39e412cac464ebbce340da34bca1
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id80;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// PerDraw                           cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id79.x; v0.y <- __input__.Position_id79.y; v0.z <- __input__.Position_id79.z; v0.w <- __input__.Position_id79.w; 
//   v1.x <- __input__.TexCoord_id69.x; v1.y <- __input__.TexCoord_id69.y; 
//   o1.x <- <VSMain return value>.TexCoord_id69.x; o1.y <- <VSMain return value>.TexCoord_id69.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id8.x; o0.y <- <VSMain return value>.ShadingPosition_id8.y; o0.z <- <VSMain return value>.ShadingPosition_id8.z; o0.w <- <VSMain return value>.ShadingPosition_id8.w
//
#line 134 "F:\Documents\Xenko Projects\Asteroids\Asteroids\Asteroids\Bin\Windows\Debug\log\shader_LambertianPrefilteringSHNoComputeEffectPass1_eb13b1edfb671579bb06a328f9038385.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 138
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 1073cb23f25ed85e2452bfd381144e29
//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id22;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id24;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id26;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id28;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id30;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id32;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id34;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id36;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id38;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id40;     // Offset:   72 Size:     8 [unused]
//   int CoefficientIndex_id83;         // Offset:   80 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// PointSampler_id50                 sampler      NA          NA    0        1
// RadianceMap_id82                  texture  float4        cube    0        1
// Globals                           cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0.666667, 0, 0, 0},
                              { 0.666667, 0, 0, 0},
                              { 0.666667, 0, 0, 0},
                              { 0.250000, 0, 0, 0},
                              { 0.250000, 0, 0, 0},
                              { 0.250000, 0, 0, 0},
                              { 0.250000, 0, 0, 0},
                              { 0.250000, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { -0.041667, 0, 0, 0},
                              { -0.041667, 0, 0, 0},
                              { -0.041667, 0, 0, 0},
                              { -0.041667, 0, 0, 0},
                              { -0.041667, 0, 0, 0},
                              { -0.041667, 0, 0, 0},
                              { -0.041667, 0, 0, 0},
                              { -0.041667, 0, 0, 0},
                              { -0.041667, 0, 0, 0} }
dcl_constantbuffer cb0[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texturecube (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 7
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id8.x; v0.y <- __input__.ShadingPosition_id8.y; v0.z <- __input__.ShadingPosition_id8.z; v0.w <- __input__.ShadingPosition_id8.w; 
//   v1.x <- __input__.TexCoord_id69.x; v1.y <- __input__.TexCoord_id69.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id9.x; o0.y <- <PSMain return value>.ColorTarget_id9.y; o0.z <- <PSMain return value>.ColorTarget_id9.z; o0.w <- <PSMain return value>.ColorTarget_id9.w
//
#line 106 "F:\Documents\Xenko Projects\Asteroids\Asteroids\Asteroids\Bin\Windows\Debug\log\shader_LambertianPrefilteringSHNoComputeEffectPass1_eb13b1edfb671579bb06a328f9038385.hlsl"
mad r0.xy, v1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)  // r0.x <- uv.x; r0.y <- uv.y
dp2 r0.x, r0.xyxx, r0.xyxx
add r0.x, r0.x, l(1.000000)  // r0.x <- dist
sqrt r0.y, r0.x
mul r0.x, r0.x, r0.y
div r0.x, l(4.000000), r0.x  // r0.x <- weight

#line 113
mov r1.x, l(1.000000)
mad r1.yz, v1.yyxy, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 1.000000, 1.000000, 0.000000)
dp3 r0.y, r1.xyzx, r1.xyzx
rsq r0.y, r0.y
mul r1.xyz, r0.yyyy, r1.xyzx  // r1.x <- dirVS.x; r1.y <- dirVS.y; r1.z <- dirVS.z
sample_indexable(texturecube)(float,float,float,float) r2.xyz, r1.xyzx, t0.xyzw, s0  // r2.x <- radiance.x; r2.y <- radiance.y; r2.z <- radiance.z

#line 79
mul r3.xyz, r1.yzyy, r1.yzxy  // r3.x <- y2; r3.y <- z2

#line 83
mad r0.z, r1.x, r1.x, -r3.x
mul r0.w, r0.y, r1.z
mul r0.yzw, r0.yyzw, l(0.000000, -0.488603, 0.546274, -1.092548)  // r0.y <- streams.SHBaseValues_id7[3]; r0.z <- streams.SHBaseValues_id7[8]; r0.w <- streams.SHBaseValues_id7[7]
mad r1.x, r3.y, l(3.000000), l(-1.000000)
mul r1.w, r3.z, l(1.092548)  // r1.w <- streams.SHBaseValues_id7[4]
mul r2.w, r1.y, r1.z
mul r1.xyz, r1.xyzx, l(0.315392, -0.488603, 0.488603, 0.000000)  // r1.x <- streams.SHBaseValues_id7[6]; r1.y <- streams.SHBaseValues_id7[1]; r1.z <- streams.SHBaseValues_id7[2]
mul r2.w, r2.w, l(-1.092548)  // r2.w <- streams.SHBaseValues_id7[5]

#line 116
movc r3.x, cb0[5].x, l(0), l(0.282095)
ieq r4.xyzw, cb0[5].xxxx, l(1, 2, 3, 8)
and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
mad r1.y, r4.x, r1.y, r3.x
mad r1.y, r4.y, r1.z, r1.y
mad r0.y, r4.z, r0.y, r1.y
ieq r5.xyzw, cb0[5].xxxx, l(4, 5, 6, 7)
and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
mad r0.y, r5.x, r1.w, r0.y
mad r0.y, r5.y, r2.w, r0.y
mad r0.y, r5.z, r1.x, r0.y
mad r0.y, r5.w, r0.w, r0.y
mad r0.y, r4.w, r0.z, r0.y
mov r0.z, cb0[5].x
mul r0.y, r0.y, icb[r0.z + 0].x
mul r1.xyz, r2.xyzx, r0.yyyy

#line 113
mov r2.y, l(-1.000000)
mad r2.xz, v1.xxyx, l(2.000000, 0.000000, -2.000000, 0.000000), l(-1.000000, 0.000000, 1.000000, 0.000000)
dp3 r0.y, r2.xyzx, r2.xyzx
rsq r0.y, r0.y
mul r3.yzw, r0.yyyy, r2.yyzx  // r3.y <- dirVS.x; r3.z <- dirVS.y; r3.w <- dirVS.z

#line 75
mul r6.xy, r3.zwzz, r4.xyxx

#line 116
mad r0.w, r6.x, l(-0.488603), r3.x
mad r0.w, r6.y, l(0.488603), r0.w

#line 76
mul r1.w, r0.y, r4.z

#line 82
mul r0.y, r0.y, r3.w
mul r0.y, r5.w, r0.y

#line 116
mad r0.w, r1.w, l(0.488603), r0.w

#line 79
mul r6.xyz, r3.zwzz, r3.zwyz  // r6.x <- y2; r6.y <- z2
mul r1.w, r5.x, r6.z

#line 116
mad r0.w, r1.w, l(1.092548), r0.w

#line 80
mul r1.w, r3.z, r3.w
mul r1.w, r5.y, r1.w

#line 116
mad r0.w, r1.w, l(-1.092548), r0.w

#line 81
mad r1.w, r6.y, l(3.000000), l(-1.000000)
mad r2.w, r3.y, r3.y, -r6.x

#line 115
sample_indexable(texturecube)(float,float,float,float) r3.yzw, r3.yzwy, t0.wxyz, s0  // r3.y <- radiance.x; r3.z <- radiance.y; r3.w <- radiance.z

#line 83
mul r2.w, r2.w, r4.w
mul r1.w, r1.w, r5.z

#line 116
mad r0.w, r1.w, l(0.315392), r0.w
mad r0.y, r0.y, l(1.092548), r0.w
mad r0.y, r2.w, l(0.546274), r0.y
mul r0.y, r0.y, icb[r0.z + 0].x
mul r3.yzw, r3.yyzw, r0.yyyy
mul r3.yzw, r0.xxxx, r3.yyzw
mad r1.xyz, r1.xyzx, r0.xxxx, r3.yzwy  // r1.x <- result.x; r1.y <- result.y; r1.z <- result.z

#line 113
mad r6.xz, v1.xxyx, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
mov r6.y, l(1.000000)
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y

#line 74
mul r0.w, r0.y, r4.x

#line 116
mad r0.w, r0.w, l(-0.488603), r3.x

#line 113
mul r3.yzw, r0.yyyy, r6.xxyz  // r3.y <- dirVS.x; r3.z <- dirVS.y; r3.w <- dirVS.z

#line 80
mul r6.xy, r0.yyyy, r3.ywyy
mul r6.xy, r5.xyxx, r6.xyxx

#line 76
mul r6.zw, r3.wwwy, r4.yyyz

#line 116
mad r0.y, r6.z, l(0.488603), r0.w
mad r0.y, r6.w, l(-0.488603), r0.y
mad r0.y, r6.x, l(1.092548), r0.y
mad r0.y, r6.y, l(-1.092548), r0.y

#line 82
mul r6.xyz, r3.zwyz, r3.zwwz  // r6.x <- y2; r6.y <- z2
mad r0.w, r6.y, l(3.000000), l(-1.000000)
mul r0.w, r0.w, r5.z

#line 116
mad r0.y, r0.w, l(0.315392), r0.y

#line 82
mul r0.w, r5.w, r6.z
mad r1.w, r3.y, r3.y, -r6.x

#line 115
sample_indexable(texturecube)(float,float,float,float) r3.yzw, r3.yzwy, t0.wxyz, s0  // r3.y <- radiance.x; r3.z <- radiance.y; r3.w <- radiance.z

#line 83
mul r1.w, r1.w, r4.w

#line 116
mad r0.y, r0.w, l(-1.092548), r0.y
mad r0.y, r1.w, l(0.546274), r0.y
mul r0.y, r0.y, icb[r0.z + 0].x
mul r3.yzw, r3.yyzw, r0.yyyy
mad r1.xyz, r3.yzwy, r0.xxxx, r1.xyzx

#line 113
dp3 r0.y, r2.xyzx, r2.xyzx
rsq r0.y, r0.y

#line 74
mul r0.w, r0.y, r4.x

#line 116
mad r0.w, r0.w, l(0.488603), r3.x

#line 113
mul r2.xyz, r0.yyyy, r2.xyzx  // r2.x <- dirVS.x; r2.y <- dirVS.y; r2.z <- dirVS.z

#line 80
mul r3.yz, r0.yyyy, r2.xxzx
mul r3.yz, r5.xxyx, r3.yyzy

#line 76
mul r6.xy, r2.zxzz, r4.yzyy

#line 116
mad r0.y, r6.x, l(0.488603), r0.w
mad r0.y, r6.y, l(-0.488603), r0.y
mad r0.y, r3.y, l(-1.092548), r0.y
mad r0.y, r3.z, l(1.092548), r0.y

#line 82
mul r3.yzw, r2.yyzx, r2.yyzz  // r3.y <- y2; r3.z <- z2
mad r0.w, r3.z, l(3.000000), l(-1.000000)
mul r0.w, r0.w, r5.z

#line 116
mad r0.y, r0.w, l(0.315392), r0.y

#line 82
mul r0.w, r5.w, r3.w
mad r1.w, r2.x, r2.x, -r3.y

#line 115
sample_indexable(texturecube)(float,float,float,float) r2.xyz, r2.xyzx, t0.xyzw, s0  // r2.x <- radiance.x; r2.y <- radiance.y; r2.z <- radiance.z

#line 83
mul r1.w, r1.w, r4.w

#line 116
mad r0.y, r0.w, l(-1.092548), r0.y
mad r0.y, r1.w, l(0.546274), r0.y
mul r0.y, r0.y, icb[r0.z + 0].x
mul r2.xyz, r2.xyzx, r0.yyyy
mad r1.xyz, r2.xyzx, r0.xxxx, r1.xyzx

#line 113
mad r2.xy, v1.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mov r2.z, l(1.000000)
dp3 r0.y, r2.xyzx, r2.xyzx
rsq r0.y, r0.y

#line 75
mul r0.w, r0.y, r4.y

#line 113
mul r2.xyz, r0.yyyy, r2.xyzx  // r2.x <- dirVS.x; r2.y <- dirVS.y; r2.z <- dirVS.z

#line 76
mul r3.yz, r2.yyxy, r4.xxzx

#line 116
mad r0.y, r3.y, l(-0.488603), r3.x
mad r0.y, r0.w, l(0.488603), r0.y
mad r0.y, r3.z, l(-0.488603), r0.y

#line 79
mul r3.yzw, r2.yyzy, r2.yyzx  // r3.y <- y2; r3.z <- z2
mul r0.w, r5.x, r3.w

#line 116
mad r0.y, r0.w, l(1.092548), r0.y

#line 82
mul r6.xy, r2.yxyy, r2.zzzz
mul r6.xy, r5.ywyy, r6.xyxx

#line 116
mad r0.y, r6.x, l(-1.092548), r0.y

#line 81
mad r0.w, r3.z, l(3.000000), l(-1.000000)
mad r1.w, r2.x, r2.x, -r3.y

#line 115
sample_indexable(texturecube)(float,float,float,float) r2.xyz, r2.xyzx, t0.xyzw, s0  // r2.x <- radiance.x; r2.y <- radiance.y; r2.z <- radiance.z

#line 83
mul r1.w, r1.w, r4.w
mul r0.w, r0.w, r5.z

#line 116
mad r0.y, r0.w, l(0.315392), r0.y
mad r0.y, r6.y, l(-1.092548), r0.y
mad r0.y, r1.w, l(0.546274), r0.y
mul r0.y, r0.y, icb[r0.z + 0].x
mul r2.xyz, r2.xyzx, r0.yyyy
mad r1.xyz, r2.xyzx, r0.xxxx, r1.xyzx

#line 113
mad r2.xy, v1.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
mov r2.z, l(-1.000000)
dp3 r0.y, r2.xyzx, r2.xyzx
rsq r0.y, r0.y

#line 75
mul r0.w, r0.y, r4.y

#line 113
mul r2.xyz, r0.yyyy, r2.xyzx  // r2.x <- dirVS.x; r2.y <- dirVS.y; r2.z <- dirVS.z

#line 76
mul r3.yz, r2.yyxy, r4.xxzx

#line 116
mad r0.y, r3.y, l(-0.488603), r3.x
mad r0.y, r0.w, l(-0.488603), r0.y
mad r0.y, r3.z, l(-0.488603), r0.y

#line 79
mul r3.xyz, r2.yzyy, r2.yzxy  // r3.x <- y2; r3.y <- z2
mul r0.w, r5.x, r3.z

#line 116
mad r0.y, r0.w, l(1.092548), r0.y

#line 82
mul r3.zw, r2.yyyx, r2.zzzz
mul r3.zw, r5.yyyw, r3.zzzw

#line 116
mad r0.y, r3.z, l(-1.092548), r0.y

#line 81
mad r0.w, r3.y, l(3.000000), l(-1.000000)
mad r1.w, r2.x, r2.x, -r3.x

#line 115
sample_indexable(texturecube)(float,float,float,float) r2.xyz, r2.xyzx, t0.xyzw, s0  // r2.x <- radiance.x; r2.y <- radiance.y; r2.z <- radiance.z

#line 83
mul r1.w, r1.w, r4.w
mul r0.w, r0.w, r5.z

#line 116
mad r0.y, r0.w, l(0.315392), r0.y
mad r0.y, r3.w, l(-1.092548), r0.y
mad r0.y, r1.w, l(0.546274), r0.y
mul r0.y, r0.y, icb[r0.z + 0].x
mul r0.yzw, r2.xxyz, r0.yyyy
mad o0.xyz, r0.yzwy, r0.xxxx, r1.xyzx
mul o0.w, r0.x, l(6.000000)

#line 127
ret 
// Approximately 175 instruction slots used
***************************
*************************/
static const float PI_id0 = 3.14159265358979323846;
const static int TOrder_id1 = 3;
static const int CoefficientsCount_id2 = TOrder_id1 * TOrder_id1;
static const float PI4_id3 = 4 * PI_id0;
static const float PI16_id4 = 16 * PI_id0;
static const float PI64_id5 = 64 * PI_id0;
static const float SQRT_PI_id6 = 1.77245385090551602729;
static const float A0_id84 = 1.0;
static const float A1_id85 = 2.0 / 3.0;
static const float A2_id86 = 1.0 / 4.0;
static const float A3_id87 = 0.0;
static const float A4_id88 = -1.0 / 24.0;
static const float A_id89[5 * 5] = { A0_id84, A1_id85, A1_id85, A1_id85, A2_id86, A2_id86, A2_id86, A2_id86, A2_id86, A3_id87, A3_id87, A3_id87, A3_id87, A3_id87, A3_id87, A3_id87, A4_id88, A4_id88, A4_id88, A4_id88, A4_id88, A4_id88, A4_id88, A4_id88, A4_id88};
SamplerState PointSampler_id50 
{
    Filter = MIN_MAG_MIP_POINT;
};
TextureCube RadianceMap_id82;
struct PS_STREAMS 
{
    float2 TexCoord_id69;
    float SHBaseValues_id7[CoefficientsCount_id2];
    float4 ColorTarget_id9;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id9 : SV_Target0;
};
struct VS_STREAMS 
{
    float4 Position_id79;
    float2 TexCoord_id69;
    float4 ShadingPosition_id8;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id8 : SV_Position;
    float2 TexCoord_id69 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id79 : POSITION;
    float2 TexCoord_id69 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id80;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id22;
    float2 Texture1TexelSize_id24;
    float2 Texture2TexelSize_id26;
    float2 Texture3TexelSize_id28;
    float2 Texture4TexelSize_id30;
    float2 Texture5TexelSize_id32;
    float2 Texture6TexelSize_id34;
    float2 Texture7TexelSize_id36;
    float2 Texture8TexelSize_id38;
    float2 Texture9TexelSize_id40;
    int CoefficientIndex_id83;
};
void EvaluateSHBases_id13(inout PS_STREAMS streams, float3 direction)
{
    float x = direction.x;
    float y = direction.y;
    float z = direction.z;
    float x2 = x * x;
    float y2 = y * y;
    float z2 = z * z;
    streams.SHBaseValues_id7[0] = 1.0 / (2.0 * SQRT_PI_id6);

    {
        streams.SHBaseValues_id7[1] = -sqrt(3.0 / PI4_id3) * y;
        streams.SHBaseValues_id7[2] = sqrt(3.0 / PI4_id3) * z;
        streams.SHBaseValues_id7[3] = -sqrt(3.0 / PI4_id3) * x;

        {
            streams.SHBaseValues_id7[4] = sqrt(15.0 / PI4_id3) * y * x;
            streams.SHBaseValues_id7[5] = -sqrt(15.0 / PI4_id3) * y * z;
            streams.SHBaseValues_id7[6] = sqrt(5.0 / PI16_id4) * (3.0 * z2 - 1.0);
            streams.SHBaseValues_id7[7] = -sqrt(15.0 / PI4_id3) * x * z;
            streams.SHBaseValues_id7[8] = sqrt(15.0 / PI16_id4) * (x2 - y2);
        }
    }
}
float3 uvToDirectionVS_id17(float u, float v, int viewIndex)
{
    if (viewIndex == 0)
        return float3(1, -v, -u);
    if (viewIndex == 1)
        return float3(-1, -v, u);
    if (viewIndex == 2)
        return float3(u, 1, v);
    if (viewIndex == 3)
        return float3(u, -1, -v);
    if (viewIndex == 4)
        return float3(u, -v, 1);
    if (viewIndex == 5)
        return float3(-u, -v, -1);
    return 0;
}
float4 Shading_id18(inout PS_STREAMS streams)
{
    float3 result = 0;
    float2 uv = streams.TexCoord_id69 * 2.0 - 1.0;
    float dist = 1.0f + dot(uv, uv);
    float weight = 4.0f / (sqrt(dist) * dist);

    [unroll]
    for (int faceIndex = 0; faceIndex < 6; faceIndex++)
    {
        float3 dirVS = normalize(uvToDirectionVS_id17(uv.x, uv.y, faceIndex));
        EvaluateSHBases_id13(streams, dirVS);
        float3 radiance = RadianceMap_id82.Sample(PointSampler_id50, dirVS).xyz;
        result += A_id89[CoefficientIndex_id83] * streams.SHBaseValues_id7[CoefficientIndex_id83] * radiance * weight;
    }
    return float4(result, weight * 6);
}
PS_OUTPUT PSMain(VS_OUTPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id69 = __input__.TexCoord_id69;
    streams.ColorTarget_id9 = Shading_id18(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id9 = streams.ColorTarget_id9;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id79 = __input__.Position_id79;
    streams.TexCoord_id69 = __input__.TexCoord_id69;
    streams.ShadingPosition_id8 = mul(streams.Position_id79, MatrixTransform_id80);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id8 = streams.ShadingPosition_id8;
    __output__.TexCoord_id69 = streams.TexCoord_id69;
    return __output__;
}
