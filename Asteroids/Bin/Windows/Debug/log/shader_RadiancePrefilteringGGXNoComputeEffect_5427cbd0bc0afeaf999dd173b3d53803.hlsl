/**************************
***** Compiler Parameters *****
***************************
@P EffectName: RadiancePrefilteringGGXNoComputeEffect
@P   - RadiancePrefilteringGGXNoComputeParams.NbOfSamplings: 1024
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer Globals [Size: 96]
@C    Texture0TexelSize_id15 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id17 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id19 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id21 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id23 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id25 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id27 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id29 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id31 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id33 => Texturing.Texture9TexelSize
@C    RadianceMapSize_id75 => RadiancePrefilteringGGXNoComputeShader.RadianceMapSize
@C    MipmapCount_id77 => RadiancePrefilteringGGXNoComputeShader.MipmapCount
@C    Roughness_id78 => RadiancePrefilteringGGXNoComputeShader.Roughness
@C    Face_id79 => RadiancePrefilteringGGXNoComputeShader.Face
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    LinearSampler_id44 => Texturing.LinearSampler [Stage: Pixel, Slot: (0-0)]
@R    RadianceMap_id76 => RadiancePrefilteringGGXNoComputeShader.RadianceMap [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    RadiancePrefilteringGGXNoComputeShader => 09faff74e61d95ec4c2698ccb45487c3
@S    Math => 5bdf39e412cac464ebbce340da34bca1
@S    ImageEffectShader => 31376a3f3da836cbe499b1374d52b9a7
@S    SpriteBase => a411b8f5112d9bc821268e8c81e1a94c
@S    ShaderBase => 5c3160ccbf936c5e102bd9315f0f946a
@S    ShaderBaseStream => f699080594ac63c1f38140de57ce1a7b
@S    Texturing => a9d9ee1fb9a68af7ce6b12291686faea
@S    CubemapUtils => da0d0f625393c1095a2ab2fcab70c88b
@S    Hammersley => 2ef5c74546b38dbe846524681f762bf4
@S    ImportanceSamplingGGX => eae7434ae0123d8c67488a0359a132b0
@S    BRDFMicrofacet => 98c58221f1b61f0766453f0ce60edcb0
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// PerDraw                           cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id1.x; o0.y <- <VSMain return value>.ShadingPosition_id1.y; o0.z <- <VSMain return value>.ShadingPosition_id1.z; o0.w <- <VSMain return value>.ShadingPosition_id1.w
//
#line 144 "F:\Documents\Xenko Projects\Asteroids\Asteroids\Asteroids\Bin\Windows\Debug\log\shader_RadiancePrefilteringGGXNoComputeEffect_5427cbd0bc0afeaf999dd173b3d53803.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 148
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 413b5c9928df7d64b69f851b58c43aff
//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id15;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id17;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id19;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id21;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id23;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id25;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id27;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id29;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id31;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id33;     // Offset:   72 Size:     8 [unused]
//   int RadianceMapSize_id75;          // Offset:   80 Size:     4
//   float MipmapCount_id77;            // Offset:   84 Size:     4
//   float Roughness_id78;              // Offset:   88 Size:     4
//   int Face_id79;                     // Offset:   92 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// LinearSampler_id44                sampler      NA          NA    0        1
// RadianceMap_id76                  texture  float4        cube    0        1
// Globals                           cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texturecube (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 7
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id1.x; v0.y <- __input__.ShadingPosition_id1.y; v0.z <- __input__.ShadingPosition_id1.z; v0.w <- __input__.ShadingPosition_id1.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 92 "F:\Documents\Xenko Projects\Asteroids\Asteroids\Asteroids\Bin\Windows\Debug\log\shader_RadiancePrefilteringGGXNoComputeEffect_5427cbd0bc0afeaf999dd173b3d53803.hlsl"
if_nz cb0[5].w
  ine r0.x, cb0[5].w, l(1)
  if_nz r0.x

#line 100
    ieq r0.xyzw, cb0[5].wwww, l(2, 3, 4, 5)
    mad r1.xy, v1.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
    mov r1.z, l(-1.000000)
    and r1.xyz, r0.wwww, r1.xyzx  // r1.x <- <ConvertTexcoordsNoFlip_id17 return value>.x; r1.y <- <ConvertTexcoordsNoFlip_id17 return value>.y; r1.z <- <ConvertTexcoordsNoFlip_id17 return value>.z
    mad r2.xy, v1.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
    mov r2.z, l(1.000000)
    movc r1.xyz, r0.zzzz, r2.xyzx, r1.xyzx
    mad r2.xz, v1.xxyx, l(2.000000, 0.000000, -2.000000, 0.000000), l(-1.000000, 0.000000, 1.000000, 0.000000)
    mov r2.y, l(-1.000000)
    movc r0.yzw, r0.yyyy, r2.xxyz, r1.xxyz  // r0.y <- <ConvertTexcoordsNoFlip_id17 return value>.x; r0.z <- <ConvertTexcoordsNoFlip_id17 return value>.y; r0.w <- <ConvertTexcoordsNoFlip_id17 return value>.z
    mad r1.xz, v1.xxyx, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
    mov r1.y, l(1.000000)
    movc r0.xyz, r0.xxxx, r1.xyzx, r0.yzwy  // r0.x <- <ConvertTexcoordsNoFlip_id17 return value>.x; r0.y <- <ConvertTexcoordsNoFlip_id17 return value>.y; r0.z <- <ConvertTexcoordsNoFlip_id17 return value>.z
  else 
    mov r0.x, l(-1.000000)
    mad r0.yz, v1.yyxy, l(0.000000, -2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, -1.000000, 0.000000)  // r0.x <- <ConvertTexcoordsNoFlip_id17 return value>.x; r0.y <- <ConvertTexcoordsNoFlip_id17 return value>.y; r0.z <- <ConvertTexcoordsNoFlip_id17 return value>.z
  endif 
else 
  mov r0.x, l(1.000000)
  mad r0.yz, v1.yyxy, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 1.000000, 1.000000, 0.000000)  // r0.x <- <ConvertTexcoordsNoFlip_id17 return value>.x; r0.y <- <ConvertTexcoordsNoFlip_id17 return value>.y; r0.z <- <ConvertTexcoordsNoFlip_id17 return value>.z
endif 

#line 106
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx  // r0.x <- R.x; r0.y <- R.y; r0.z <- R.z

#line 61
mul r0.w, cb0[5].z, cb0[5].z  // r0.w <- a
mul r1.x, r0.w, r0.w
mad r0.w, r0.w, r0.w, l(-1.000000)

#line 69
lt r1.y, |r0.z|, l(0.999000)
movc r1.yzw, r1.yyyy, l(0,1.000000,0,0), l(0,0,1.000000,0)  // r1.y <- UpVector.z; r1.z <- UpVector.x; r1.w <- UpVector.y
mul r2.xyz, r0.yzxy, r1.yzwy
mad r1.yzw, r1.wwyz, r0.zzxy, -r2.xxyz
dp3 r2.x, r1.yzwy, r1.yzwy
rsq r2.x, r2.x
mul r1.yzw, r1.yyzw, r2.xxxx  // r1.y <- TangentX.x; r1.z <- TangentX.y; r1.w <- TangentX.z
mul r2.xyz, r0.zxyz, r1.zwyz
mad r2.xyz, r0.yzxy, r1.wyzw, -r2.xyzx  // r2.x <- TangentY.x; r2.y <- TangentY.y; r2.z <- TangentY.z

#line 117
itof r2.w, cb0[5].x
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, l(6.000000)
div r2.w, l(12.566371), r2.w  // r2.w <- omegaP

#line 109
mov r3.xyzw, l(0,0,0,0)  // r3.x <- prefilteredSample.x; r3.y <- prefilteredSample.y; r3.z <- prefilteredSample.z; r3.w <- prefilteredSample.w
mov r4.x, l(0)  // r4.x <- sampleIndex
loop 
  ige r4.y, r4.x, l(1024)
  breakc_nz r4.y

#line 79
  mov r4.yz, l(0,0,0.500000,0)  // r4.y <- u; r4.z <- p
  mov r4.w, r4.x  // r4.w <- kk
  loop 
    breakc_z r4.w
    and r5.x, r4.w, l(1)
    add r5.y, r4.z, r4.y  // r5.y <- u
    movc r4.y, r5.x, r5.y, r4.y  // r4.y <- u
    mul r4.z, r4.z, l(0.500000)
    ishr r4.w, r4.w, l(1)
  endloop 
  itof r4.z, r4.x
  add r4.z, r4.z, l(0.500000)
  mul r4.w, r4.z, l(0.000977)  // r4.w <- v

#line 62
  mul r5.x, r4.y, l(6.283185)  // r5.x <- phi
  mad r4.z, -r4.z, l(0.000977), l(1.000000)
  mad r4.w, r0.w, r4.w, l(1.000000)
  div r4.z, r4.z, r4.w
  sqrt r4.z, r4.z  // r4.z <- CosTheta
  mad r4.w, -r4.z, r4.z, l(1.000000)
  sqrt r4.w, r4.w  // r4.w <- SinTheta
  sincos r5.x, r6.x, r5.x
  mul r5.y, r4.w, r6.x  // r5.y <- H.x
  mul r4.w, r4.w, r5.x  // r4.w <- H.y

#line 72
  mul r5.xzw, r2.xxyz, r4.wwww
  mad r5.xyz, r1.yzwy, r5.yyyy, r5.xzwx
  mad r5.xyz, r0.xyzx, r4.zzzz, r5.xyzx  // r5.x <- <GetSample_id19 return value>.x; r5.y <- <GetSample_id19 return value>.y; r5.z <- <GetSample_id19 return value>.z

#line 113
  dp3 r4.z, r0.xyzx, r5.xyzx
  add r4.z, r4.z, r4.z
  mad r5.xyz, r4.zzzz, r5.xyzx, -r0.xyzx  // r5.x <- L.x; r5.y <- L.y; r5.z <- L.z
  dp3_sat r6.w, r0.xyzx, r5.xyzx  // r6.w <- NoL

#line 121
  lt r4.z, l(0.000000), r6.w
  if_nz r4.z

#line 57
    mul r4.z, r6.w, r6.w
    mad r4.z, r4.z, r0.w, l(1.000000)
    max r4.z, r4.z, l(0.000100)
    mul r4.z, r4.z, r4.z
    mul r4.z, r4.z, l(3.141593)
    div r4.z, r1.x, r4.z  // r4.z <- <NormalDistributionGGX_id20 return value>

#line 116
    mul r4.z, r4.z, l(256.000000)
    div r4.z, l(1.000000, 1.000000, 1.000000, 1.000000), r4.z  // r4.z <- omegaS
    div r4.z, r4.z, r2.w
    log r4.z, r4.z
    mul r4.z, r4.z, l(0.500000)
    max r4.z, r4.z, l(0.000000)
    min r4.z, r4.z, cb0[5].y  // r4.z <- mipLevel

#line 124
    sample_l_indexable(texturecube)(float,float,float,float) r5.xyz, r5.xyzx, t0.xyzw, s0, r4.z
    mul r6.xyz, r6.wwww, r5.xyzx  // r6.x <- prefilteredColor.x; r6.y <- prefilteredColor.y; r6.z <- prefilteredColor.z
  else   // Prior locations: r5.x <- L.x; r5.y <- L.y; r5.z <- L.z
    mov r6.xyzw, l(0,0,0,0)  // r6.x <- prefilteredColor.x; r6.y <- prefilteredColor.y; r6.z <- prefilteredColor.z
  endif 
  add r3.xyzw, r6.xyzw, r3.xyzw
  iadd r4.x, r4.x, l(1)
endloop 
div o0.xyzw, r3.xyzw, r3.wwww

#line 137
ret 
// Approximately 103 instruction slots used
***************************
*************************/
static const float PI_id0 = 3.14159265358979323846;
const static int TNbOfSamples_id74 = 1024;
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
TextureCube RadianceMap_id76;
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id1;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id1 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
    int RadianceMapSize_id75;
    float MipmapCount_id77;
    float Roughness_id78;
    int Face_id79;
};
float NormalDistributionGGX_id20(float alphaR, float nDotH)
{
    float alphaR2 = alphaR * alphaR;
    return alphaR2 / (PI_id0 * pow(max(nDotH * nDotH * (alphaR2 - 1) + 1, 0.0001), 2.0f));
}
float3 GetSample_id19(float2 xi, float roughness, float3 N)
{
    float a = roughness * roughness;
    float phi = 2 * PI_id0 * xi.x;
    float CosTheta = sqrt((1 - xi.y) / (1 + (a * a - 1) * xi.y));
    float SinTheta = sqrt(1 - CosTheta * CosTheta);
    float3 H;
    H.x = SinTheta * cos(phi);
    H.y = SinTheta * sin(phi);
    H.z = CosTheta;
    float3 UpVector = abs(N.z) < 0.999 ? float3(0, 0, 1) : float3(1, 0, 0);
    float3 TangentX = normalize(cross(UpVector, N));
    float3 TangentY = cross(N, TangentX);
    return TangentX * H.x + TangentY * H.y + N * H.z;
}
float2 GetSamplePlane_id18(int k, int samplesCount)
{
    float u = 0.0;
    float p = 0.5;

    for (int kk = k; kk; p *= 0.5, kk >>= 1)
    {
        if (kk & 1)
            u += p;
    }
    float v = (k + 0.5) / samplesCount;
    return float2(u, v);
}
float3 ConvertTexcoordsNoFlip_id17(float2 inputTexcoord, int viewIndex)
{
    float2 position = 2 * inputTexcoord - 1;
    if (viewIndex == 0)
        return float3(1, -position.y, -position.x);
    if (viewIndex == 1)
        return float3(-1, -position.y, position.x);
    if (viewIndex == 2)
        return float3(position.x, 1, position.y);
    if (viewIndex == 3)
        return float3(position.x, -1, -position.y);
    if (viewIndex == 4)
        return float3(position.x, -position.y, 1);
    if (viewIndex == 5)
        return float3(-position.x, -position.y, -1);
    return 0;
}
float4 Shading_id16(inout PS_STREAMS streams)
{
    float3 R = normalize(ConvertTexcoordsNoFlip_id17(streams.TexCoord_id62, Face_id79));
    float4 prefilteredSample = 0;

    for (int sampleIndex = 0; sampleIndex < TNbOfSamples_id74; sampleIndex++)
    {
        float2 xi = GetSamplePlane_id18(sampleIndex, TNbOfSamples_id74);
        float3 H = GetSample_id19(xi, Roughness_id78, R);
        float3 L = 2 * dot(R, H) * H - R;
        float NoL = saturate(dot(R, L));
        float pdf = NormalDistributionGGX_id20(Roughness_id78 * Roughness_id78, NoL) / 4;
        float omegaS = 1.0 / (TNbOfSamples_id74 * pdf);
        float omegaP = 4.0 * PI_id0 / (6.0 * RadianceMapSize_id75 * RadianceMapSize_id75);
        float mipLevel = clamp(0.5 * log2(omegaS / omegaP), 0, MipmapCount_id77);
        float3 prefilteredColor = 0;
        float weight = 0;
        if (NoL > 0)
        {
            weight = NoL;
            prefilteredColor = RadianceMap_id76.SampleLevel(LinearSampler_id44, L, mipLevel).rgb * weight;
        }
        prefilteredSample += float4(prefilteredColor, weight);
    }
    return prefilteredSample / prefilteredSample.w;
}
PS_OUTPUT PSMain(VS_OUTPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id16(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id1 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id1 = streams.ShadingPosition_id1;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
