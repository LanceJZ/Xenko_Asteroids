<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SiliconStudio.Xenko.Input</name>
    </assembly>
    <members>
        <member name="T:SiliconStudio.XenkoVersion">
            <summary>
            Internal version used to identify Xenko version.
            </summary>
            <remarks>
            Note: When modifying the version here, it must be modified also in the Xenko.xkpkg 
            </remarks>
        </member>
        <member name="F:SiliconStudio.XenkoVersion.CurrentAssemblyAsText">
            <summary>
            The .NET current assembly version as text, not including pre-release (alpha, beta...) information.
            </summary>
        </member>
        <member name="F:SiliconStudio.XenkoVersion.CurrentAsText">
            <summary>
            The Store current version as text, including pre-release (alpha, beta...) information
            </summary>
            <remarks>
            Version number as described in http://docs.nuget.org/docs/reference/versioning
            When using pre-release (alpha, beta, rc...etc.) and because the order of the release is in alphabetical order,
            please use a double digit like alpha00 alpha01...etc. in order to make sure that we will follow the correct
            order for the versions.
            </remarks>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.AccelerometerSensor">
            <summary>
            This class represents a sensor of type Accelerometer. It measures the acceleration forces (including gravity) applying on the device.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.AccelerometerSensor.Acceleration">
            <summary>
            Gets the current acceleration applied on the device (in meters/seconds^2).
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GestureConfigCollection">
            <summary>
            A collection of <see cref="T:SiliconStudio.Xenko.Input.GestureConfig"/>.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GestureConfigDrag">
            <summary>
            Configuration class for the Drag gesture.
            </summary>
            <remarks>A drag gesture can be composed of 1 or more fingers.</remarks>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureConfigDrag.MinimumDragDistance">
            <summary>
            Specify the minimum translation distance required  before that the gesture can be recognized as a Drag.
            </summary>
            <exception cref="T:System.InvalidOperationException">Tried to modify the configuration after it has been frozen by the system.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The provided value was negative.</exception>
            <remarks>The user can reduce this value if he needs the drag gesture to be triggered even for very small drags.
            On the contrary, he can increase this value if he wants to avoid to deals with too small drags.</remarks>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureConfigDrag.AllowedErrorMargins">
            <summary>
            The (x,y) error margins allowed during directional dragging.
            </summary>
            <exception cref="T:System.InvalidOperationException">Tried to modify the configuration after it has been frozen by the system.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The provided x or y value was not positive.</exception>
            <remarks>Those values are used only for directional (vertical or horizontal) dragging. 
            Decrease those values to trigger the gesture only when the dragging is perfectly in the desired direction.
            Increase those values to allow directional gestures to be more approximative.</remarks>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureConfigDrag.DragShape">
            <summary>
            The shape (direction) of the drag gesture.
            </summary>
            <exception cref="T:System.InvalidOperationException">Tried to modify the configuration after it has been frozen by the system.</exception>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.GestureConfigDrag.#ctor">
            <summary>
            Create a default drag gesture configuration for one finger free dragging.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.GestureConfigDrag.#ctor(SiliconStudio.Xenko.Input.GestureShape)">
            <summary> 
            Create a default drag gesture configuration for one finger dragging.
            </summary>
            <param name="dragShape">The dragging shape</param>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GestureConfigFlick">
            <summary> 
            Configuration class for the Flick gesture.
            </summary>
            <remarks>A Flick gesture can be composed of 1 or more fingers.</remarks>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureConfigFlick.AllowedErrorMargins">
            <summary>
            The (x,y) error margins allowed during directional dragging.
            </summary>
            <exception cref="T:System.InvalidOperationException">Tried to modify the configuration after it has been frozen by the system.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The provided x or y value was not positive.</exception>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureConfigFlick.FlickShape">
            <summary>
            The shape of the flick gesture.
            </summary>        
            <exception cref="T:System.InvalidOperationException">Tried to modify the configuration after it has been frozen by the system.</exception>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureConfigFlick.MinimumAverageSpeed">
            <summary>
            The minimum average speed of the gesture to be detected as a flick.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The value must be positive</exception>
            <exception cref="T:System.InvalidOperationException">Tried to modify the configuration after it has been frozen by the system.</exception>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureConfigFlick.MinimumFlickLength">
            <summary>
            The minimum distance that the flick gesture has to cross from its origin to be detected has Flick.
            </summary>
            <exception cref="T:System.InvalidOperationException">Tried to modify the configuration after it has been frozen by the system.</exception>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.GestureConfigFlick.#ctor">
            <summary>
            Create a default Flick gesture configuration for one finger free flicking.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.GestureConfigFlick.#ctor(SiliconStudio.Xenko.Input.GestureShape)">
            <summary>
            Create a default gesture configuration for one finger flicking.
            </summary>
            <param name="flickShape">The shape of the flicking.</param>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GamePadButton">
            <summary>
            Buttons for gamepad returned by <see cref="T:SiliconStudio.Xenko.Input.GamePadState"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GamePadButton.PadUp">
            <summary>
            PadUp button.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GamePadButton.PadDown">
            <summary>
            PadDown button.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GamePadButton.PadLeft">
            <summary>	
            PadLeft button.
            </summary>	
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GamePadButton.PadRight">
            <summary>	
            PadRight button.
            </summary>	
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GamePadButton.Start">
            <summary>	
            Start button.
            </summary>	
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GamePadButton.Back">
            <summary>	
            Back button.
            </summary>	
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GamePadButton.LeftThumb">
            <summary>
            Left thumb button.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GamePadButton.RightThumb">
            <summary>
            Right thumb button.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GamePadButton.LeftShoulder">
            <summary>
            Left shoulder button.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GamePadButton.RightShoulder">
            <summary>
            Right shoulder button.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GamePadButton.A">
            <summary>
            A button.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GamePadButton.B">
            <summary>
            B button.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GamePadButton.X">
            <summary>
            X button.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GamePadButton.Y">
            <summary>
            Y button.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GamePadButton.None">
            <summary>	
            No buttons.	
            </summary>	
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GamePadState">
            <summary>
            Describes the state of a gamepad.
            </summary>
            <seealso cref="M:SiliconStudio.Xenko.Input.InputManager.GetGamePad(System.Int32)"/>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GamePadState.IsConnected">
            <summary>
            A boolean indicating the connect status of this gamepad. <c>true</c> if connected, otherwise <c>false</c>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GamePadState.Buttons">
            <summary>
            Bitmask of the gamepad buttons.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GamePadState.LeftThumb">
            <summary>
            Left thumbstick x-axis/y-axis value. The value is in the range [-1.0f, 1.0f] for both axis.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GamePadState.RightThumb">
            <summary>
            Right thumbstick x-axis/y-axis value. The value is in the range [-1.0f, 1.0f] for both axis.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GamePadState.LeftTrigger">
            <summary>
            The left trigger analog control in the range [0, 1.0f]. See remarks.
            </summary>
            <remarks>
            Some controllers are not supporting the range of value and may act as a simple button returning only 0 or 1.
            </remarks>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GamePadState.RightTrigger">
            <summary>
            The right trigger analog control in the range [0, 1.0f]. See remarks.
            </summary>
            <remarks>
            Some controllers are not supporting the range of value and may act as a simple button returning only 0 or 1.
            </remarks>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.GamePadState.Equals(SiliconStudio.Xenko.Input.GamePadState)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.GamePadState.op_Equality(SiliconStudio.Xenko.Input.GamePadState,SiliconStudio.Xenko.Input.GamePadState)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="left">The left gamepad value.</param>
            <param name="right">The right gamepad value.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.GamePadState.op_Inequality(SiliconStudio.Xenko.Input.GamePadState,SiliconStudio.Xenko.Input.GamePadState)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="left">The left gamepad value.</param>
            <param name="right">The right gamepad value.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GestureConfig">
            <summary>
            This represents the base class for all gesture configuration.
            </summary>
            <remarks>
            <para>Gesture configurations cannot be modified after being added to the input system for gesture recognition. Doing so will throw an <see cref="T:System.InvalidOperationException"/>.</para>
            <para>Gesture Recognizers work with normalized coordinates belonging to [0,1]x[0,1/screenRatio] 
            so distances, speeds and margin errors need to be expressed relatively to this coordinates system.</para>
            </remarks>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureConfig.AssociatedGestureType">
            <summary>
            Specify the <see cref="T:SiliconStudio.Xenko.Input.GestureType"/> corresponding to this configuration.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureConfig.RequiredNumberOfFingers">
            <summary>
            This value represents the required number of simultaneous finger to tap to trigger the gesture. For example: 1 for single finger, and so on...
            </summary>
            <remarks>This value is strictly positive.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">The given value is not in the allowed range.</exception>
            <exception cref="T:System.InvalidOperationException">Tried to modify the configuration after it has been frozen by the system.</exception>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GestureConfig.frozen">
            <summary>
            Indicate that the configuration is frozen and cannot be modified anymore by the user.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.GestureConfig.Freeze">
            <summary>
            Freeze the configuration so that the user cannot modify it anymore.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.GestureConfig.CreateRecognizer(System.Single)">
            <summary>
            Create a recognizer for the current configuration.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GestureEvent">
            <summary>
            Base class for the gesture events.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEvent.State">
            <summary>
            The state of the gesture.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEvent.Type">
            <summary>
            The type of the gesture.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEvent.NumberOfFinger">
            <summary>
            The number of fingers involved in the gesture.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEvent.DeltaTime">
            <summary>
            The time elapsed between the two last events of the gesture.
            </summary>
            <remarks>This value is equal to <see cref="P:SiliconStudio.Xenko.Input.GestureEvent.TotalTime"/> for discrete gestures.</remarks>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEvent.TotalTime">
            <summary>
            The time elapsed since the beginning of the gesture.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GestureEventDrag">
            <summary>
            Event class for the Drag gesture.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GestureEventFlick">
            <summary>
            Event class for the Flick gesture.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GestureEventLongPress">
            <summary>
            Event class for the LongPress gesture.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEventLongPress.Position">
            <summary>
            The position (in pixels) where the LongPress gesture happened.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GestureEventComposite">
            <summary>
            Event class for the Composite gesture.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEventComposite.CenterBeginningPosition">
            <summary>
            The position of the center of the composite transformation at the beginning of the gesture (in normalized coordinates [0,1]).
            </summary>
            <remarks>The center of the transformation corresponds to the middle of the 2 fingers.</remarks>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEventComposite.CenterCurrentPosition">
            <summary>
            The current position of the center of the composite transformation (in normalized coordinates [0,1]).
            </summary>
            <remarks>The center of the transformation corresponds to the middle of the 2 fingers.</remarks>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEventComposite.DeltaRotation">
            <summary>
            The rotation angle (in radian) since the last event of the gesture.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEventComposite.TotalRotation">
            <summary>
            The rotation angle (in radian) since the beginning of the gesture.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEventComposite.DeltaScale">
            <summary>
            The difference of scale since the last event of the gesture. 
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEventComposite.TotalScale">
            <summary>
            The difference of scale since the beginning of the gesture.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEventComposite.DeltaTranslation">
            <summary>
            The translation (in pixels) performed since the last event of the gesture.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEventComposite.TotalTranslation">
            <summary>
            The translation (in pixels) performed since the beginning of the gesture.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GestureEventTap">
            <summary>
            Event class for the Tap gesture.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEventTap.NumberOfTaps">
            <summary>
            The number of time the use successively touched the screen.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEventTap.TapPosition">
            <summary>
            The position (in pixels) of the tap.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GestureEventTranslation">
            <summary>
            Event class for the Drag gesture.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEventTranslation.Shape">
            <summary>
            The Shape of the drag.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEventTranslation.StartPosition">
            <summary>
            The position (in pixels) where the drag event started.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEventTranslation.CurrentPosition">
            <summary>
            The current position (in pixels) of the drag event.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEventTranslation.DeltaTranslation">
            <summary>
            The translation (in pixels) performed since the last event of the gesture.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEventTranslation.TotalTranslation">
            <summary>
            The translation (in pixels) performed since the beginning of the gesture.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureEventTranslation.AverageSpeed">
            <summary>
            The average translation speed (in pixels per seconds) of the drag event.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GestureRecognizerContMotion">
            <summary>
            A gesture recognizer for continuous motions.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GestureShape">
            <summary>
            Gesture possible shapes.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GestureShape.Horizontal">
            <summary>
            Represent a gesture that has its shape along the horizontal axis.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GestureShape.Vertical">
            <summary>
            Represent a gesture that has its shape along the vertical axis.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GestureShape.Free">
            <summary>
            Represent a gesture that has a random shape.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GestureState">
            <summary>
            The different possible states of a gestures.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GestureState.Occurred">
            <summary>
            A discrete gesture has occurred.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GestureState.Began">
            <summary>
            A continuous gesture has started.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GestureState.Changed">
            <summary>
            A continuous gesture parameters changed.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GestureState.Ended">
            <summary>
            A continuous gesture has stopped.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GestureType">
            <summary>
            List all the available type of Gestures.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GestureType.Drag">
            <summary>
            The user touched the screen and then performed a free translation.
            </summary>
            <remarks>Drag is a continuous gesture.</remarks>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GestureType.Flick">
            <summary>
            The user touched the screen and then performed a quick swipe.
            </summary>
            <remarks>Flick is a discrete gesture.</remarks>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GestureType.LongPress">
            <summary>
            The user touched and maintained a point on the screen.
            </summary>
            <remarks>LongPress is a discrete gesture.</remarks>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GestureType.Composite">
            <summary>
            The user touched two points of the screen and performed a composite transformation (translation, rotation, scale).
            </summary>
            <remarks>Rotation is a continuous gesture.</remarks>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.GestureType.Tap">
            <summary>
            The user touched the screen.
            </summary>
            <remarks>Tap is a discrete gesture.</remarks>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GravitySensor">
            <summary>
            This class represents a sensor of type Gravity. It measures the gravity force applying on the device.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GravitySensor.Vector">
            <summary>
            Gets the current gravity applied on the device (in meters/seconds^2).
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GyroscopeSensor">
            <summary>
            This class represents a sensor of type Gyroscope. It measures the rotation speed of device along the x/y/z axis.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GyroscopeSensor.RotationRate">
            <summary>
            Gets the current rotation speed of the device along x/y/z axis.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.InputManager.UseRawInput">
            <summary>
            Does InputManager support raw input? By default true.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.InputManager.MouseButtonCurrentlyDown">
            <summary>
            The exact current down/up state of the mouse button (not synchronized with the update cycles).
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.ActivatedGestures">
            <summary>
            List of the gestures to recognize.
            </summary>
            <remarks>To detect a new gesture add its configuration to the list. 
            To stop detecting a gesture remove its configuration from the list. 
            To all gestures detection clear the list.
            Note that once added to the list the <see cref="T:SiliconStudio.Xenko.Input.GestureConfig"/>s are frozen by the system and cannot be modified anymore.</remarks>
            <seealso cref="T:SiliconStudio.Xenko.Input.GestureConfig"/>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.MouseWheelDelta">
            <summary>
            Gets the delta value of the mouse wheel button since last frame.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.Accelerometer">
            <summary>
            Gets the reference to the accelerometer sensor. The accelerometer measures all the acceleration forces applied on the device.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.Compass">
            <summary>
            Gets the reference to the compass sensor. The compass measures the angle between the device top and the north.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.Gyroscope">
            <summary>
            Gets the reference to the gyroscope sensor. The gyroscope measures the rotation speed of the device.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.UserAcceleration">
            <summary>
            Gets the reference to the user acceleration sensor. The user acceleration sensor measures the acceleration produce by the user on the device (no gravity).
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.Gravity">
            <summary>
            Gets the reference to the gravity sensor. The gravity sensor measures the gravity vector applied to the device.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.Orientation">
            <summary>
            Gets the reference to the orientation sensor. The orientation sensor measures orientation of device in the world.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.ControlWidth">
            <summary>
            The width in pixel of the control
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.ControlHeight">
            <summary>
            The height in pixel of the control
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.LockMousePosition(System.Boolean)">
            <summary>
            Lock the mouse's position and hides it until the next call to <see cref="M:SiliconStudio.Xenko.Input.InputManager.UnlockMousePosition"/>.
            </summary>
            <param name="forceCenter">If true will make sure that the mouse cursor position moves to the center of the client window</param>
            <remarks>This function has no effects on devices that does not have mouse</remarks>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.UnlockMousePosition">
            <summary>
            Unlock the mouse's position previously locked by calling <see cref="M:SiliconStudio.Xenko.Input.InputManager.LockMousePosition(System.Boolean)"/> and restore the mouse visibility.
            </summary>
            <remarks>This function has no effects on devices that does not have mouse</remarks>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.IsMousePositionLocked">
            <summary>
            Gets the value indicating if the mouse position is currently locked or not.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.VirtualButtonConfigSet">
            <summary>
            Gets or sets the configuration for virtual buttons.
            </summary>
            <value>The current binding.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.PointerEvents">
            <summary>
            Gets a collection of pointer events since the previous updates.
            </summary>
            <value>The pointer events.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.GestureEvents">
            <summary>
            Gets the collection of gesture events since the previous updates.
            </summary>
            <value>The gesture events.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.HasGamePad">
            <summary>
            Gets a value indicating whether gamepads are available.
            </summary>
            <value><c>true</c> if gamepads are available; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.GamePadCount">
            <summary>
            Gets the number of gamepad connected.
            </summary>
            <value>The number of gamepad connected.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.HasKeyboard">
            <summary>
            Gets a value indicating whether the keyboard is available.
            </summary>
            <value><c>true</c> if the keyboard is available; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.HasMouse">
            <summary>
            Gets a value indicating whether the mouse is available.
            </summary>
            <value><c>true</c> if the mouse is available; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.HasPointer">
            <summary>
            Gets a value indicating whether pointer device is available.
            </summary>
            <value><c>true</c> if pointer devices are available; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.KeyDown">
            <summary>
            Gets the list of keys being pressed down.
            </summary>
            <value>The key pressed.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.KeyEvents">
            <summary>
            Gets the list of key events (pressed or released) since the previous update.
            </summary>
            <value>The key events.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.MousePosition">
            <summary>
            Gets the mouse position.
            </summary>
            <value>The mouse position.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.MouseDelta">
            <summary>
            Gets the mouse delta.
            </summary>
            <value>The mouse position.</value>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.GetVirtualButton(System.Int32,System.Object)">
            <summary>
            Gets a binding value for the specified name and the specified config extract from the current <see cref="P:SiliconStudio.Xenko.Input.InputManager.VirtualButtonConfigSet"/>.
            </summary>
            <param name="configIndex">An index to a <see cref="T:SiliconStudio.Xenko.Input.VirtualButtonConfig"/> stored in the <see cref="P:SiliconStudio.Xenko.Input.InputManager.VirtualButtonConfigSet"/></param>
            <param name="bindingName">Name of the binding.</param>
            <returns>The value of the binding.</returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.GetGamePad(System.Int32)">
            <summary>
            Gets the state of the specified gamepad.
            </summary>
            <param name="gamepadIndex">Index of the gamepad. -1 to return the first connected gamepad</param>
            <returns>The state of the gamepad.</returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.SetGamePadVibration(System.Int32,System.Single,System.Single)">
            <summary>
            Sets the vibration state of the gamepad
            </summary>
            <param name="gamepadIndex">Index of the gamepad. -1 to use the first connected gamepad</param>
            <param name="leftMotor">A value from 0.0 to 1.0 where 0.0 is no vibration and 1.0 is full vibration power; applies to the left motor.</param>
            <param name="rightMotor">A value from 0.0 to 1.0 where 0.0 is no vibration and 1.0 is full vibration power; applies to the right motor.</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.IsPadButtonDown(System.Int32,SiliconStudio.Xenko.Input.GamePadButton)">
            <summary>
            Determines whether the specified game pad button is being pressed down.
            </summary>
            <param name="gamepadIndex">A valid game pad index</param>
            <param name="button">The button to check</param>
            <returns></returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.IsPadButtonPressed(System.Int32,SiliconStudio.Xenko.Input.GamePadButton)">
            <summary>
            Determines whether the specified game pad button is pressed since the previous update.
            </summary>
            <param name="gamepadIndex">A valid game pad index</param>
            <param name="button">The button to check</param>
            <returns></returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.IsPadButtonReleased(System.Int32,SiliconStudio.Xenko.Input.GamePadButton)">
            <summary>
            Determines whether the specified game pad button is released since the previous update.
            </summary>
            <param name="gamepadIndex">A valid game pad index</param>
            <param name="button">The button to check</param>
            <returns></returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.IsKeyDown(SiliconStudio.Xenko.Input.Keys)">
            <summary>
            Determines whether the specified key is being pressed down.
            </summary>
            <param name="key">The key.</param>
            <returns><c>true</c> if the specified key is being pressed down; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.IsKeyPressed(SiliconStudio.Xenko.Input.Keys)">
            <summary>
            Determines whether the specified key is pressed since the previous update.
            </summary>
            <param name="key">The key.</param>
            <returns><c>true</c> if the specified key is pressed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.IsKeyReleased(SiliconStudio.Xenko.Input.Keys)">
            <summary>
            Determines whether the specified key is released since the previous update.
            </summary>
            <param name="key">The key.</param>
            <returns><c>true</c> if the specified key is released; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.HasDownMouseButtons">
            <summary>
            Determines whether one or more of the mouse buttons are down
            </summary>
            <returns><c>true</c> if one or more of the mouse buttons are down; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.HasReleasedMouseButtons">
            <summary>
            Determines whether one or more of the mouse buttons are released
            </summary>
            <returns><c>true</c> if one or more of the mouse buttons are released; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.HasPressedMouseButtons">
            <summary>
            Determines whether one or more of the mouse buttons are pressed
            </summary>
            <returns><c>true</c> if one or more of the mouse buttons are pressed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.IsMouseButtonDown(SiliconStudio.Xenko.Input.MouseButton)">
            <summary>
            Determines whether the specified mouse button is being pressed down.
            </summary>
            <param name="mouseButton">The mouse button.</param>
            <returns><c>true</c> if the specified mouse button is being pressed down; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.IsMouseButtonPressed(SiliconStudio.Xenko.Input.MouseButton)">
            <summary>
            Determines whether the specified mouse button is pressed since the previous update.
            </summary>
            <param name="mouseButton">The mouse button.</param>
            <returns><c>true</c> if the specified mouse button is pressed since the previous update; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.IsMouseButtonReleased(SiliconStudio.Xenko.Input.MouseButton)">
            <summary>
            Determines whether the specified mouse button is released.
            </summary>
            <param name="mouseButton">The mouse button.</param>
            <returns><c>true</c> if the specified mouse button is released; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.Scan">
            <summary>
            Rescans all input devices in order to query new device connected. See remarks.
            </summary>
            <remarks>
            This method could take several milliseconds and should be used at specific time in a game where performance is not crucial (pause, configuration screen...etc.)
            </remarks>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.CheckAndEnableSensors">
            <summary>
            Checks if new sensors need to be enabled and activate them.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.UpdateEnabledSensorsData">
            <summary>
            Update the data values of enabled sensors
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.CheckAndDisableSensors">
            <summary>
            Checks if old sensors need to be disabled and inactivate them.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.InputManager.MultiTouchEnabled">
            <summary>
            Gets or sets the value indicating if simultaneous multiple finger touches are enabled or not.
            If not enabled only the events of one finger at a time are triggered.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.InputManager.GamePad">
            <summary>
            Base class used to track the state of a gamepad (XInput or DirectInput).
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.InputManager.GamePad.Key">
            <summary>
            Unique identifier of the gamepad.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.InputManager.GamePadFactory">
            <summary>
            Base class used to track the state of a gamepad (XInput or DirectInput).
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.TransformPosition(SiliconStudio.Core.Mathematics.Size2F,SiliconStudio.Core.Mathematics.RectangleF,SiliconStudio.Core.Mathematics.Vector2)">
            <summary>
            Helper method to transform mouse and pointer event positions to sub rectangles
            </summary>
            <param name="fromSize">the size of the source rectangle</param>
            <param name="destinationRectangle">The destination viewport rectangle</param>
            <param name="screenCoordinates">The normalized screen coordinates</param>
            <returns></returns>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.InputManager.DirectInputGamePadFactory">
            <summary>
            Internal GamePad factory handling DirectInput gamepads.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.InputManager.DirectInputGamePad">
            <summary>
            Internal gamepad handling DirectInput gamepads.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.InputManager.SdlInputGamePadFactory">
            <summary>
            Internal GamePad factory handling XInput gamepads.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.SdlInputGamePadFactory.#cctor">
            <summary>
            Initializes static members of the <see cref="T:System.Windows.Input.InputManager" /> class.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.InputManager.SdlInputGamePad">
            <summary>
            Internal gamepad handling SdlInput gamepads.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.InputManager.XInputGamePadFactory">
            <summary>
            Internal GamePad factory handling XInput gamepads.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager.XInputGamePadFactory.#cctor">
            <summary>
            Initializes static members of the <see cref="T:System.Windows.Input.InputManager" /> class.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.InputManager.XInputGamePad">
            <summary>
            Internal gamepad handling XInput gamepads.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManager`1.Initialize(SiliconStudio.Xenko.Games.GameContext{`0})">
            <summary>
            Type safe version of Initialize.
            </summary>
            <param name="context">Matching context type.</param>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.InputManagerSDL._relativeCapturedPosition">
            <summary>
            Location of mouse in Window coordinate when mouse is captured
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.SDLKeys">
            <summary>
            Mapping between <see cref="T:SDL2.SDL.SDL_Keycode"/> and <see cref="T:SiliconStudio.Xenko.Input.Keys"/> needed for
            translating SDL key events into Xenko ones.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.SDLKeys.mapKeys">
            <summary>
            Map between SDL keys and Xenko keys.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.SDLKeys.NewMapKeys">
            <summary>
            Create a mapping between <see cref="T:SDL2.SDL.SDL_Keycode"/> and <see cref="T:SiliconStudio.Xenko.Input.Keys"/>
            </summary>
            <remarks>Not all <see cref="T:SiliconStudio.Xenko.Input.Keys"/> have a corresponding SDL entries. For the moment they are commented out in the code below.</remarks>
            <returns>A new map.</returns>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.WinKeys">
            <summary>
            Mapping between <see cref="T:System.Windows.Forms.Keys"/> and <see cref="T:SiliconStudio.Xenko.Input.Keys"/> needed for
            translating Winform key events into Xenko ones.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.WinKeys.mapKeys">
            <summary>
            Map between Winform keys and Xenko keys.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.WinKeys.NewMapKeys">
            <summary>
            Create a mapping between <see cref="T:System.Windows.Forms.Keys"/> and <see cref="T:SiliconStudio.Xenko.Input.Keys"/>
            </summary>
            <returns>A new map.</returns>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.Extensions.InputManagerExtensions">
            <summary>
            InputManager extra utility methods
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.Extensions.InputManagerExtensions.SimulateKeyDown(SiliconStudio.Xenko.Input.InputManager,SiliconStudio.Xenko.Input.Keys)">
            <summary>
            Injects a Key down event into the events stack
            </summary>
            <param name="inputManager">the InputManager</param>
            <param name="key">the key you want to simulate</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.Extensions.InputManagerExtensions.SimulateKeyUp(SiliconStudio.Xenko.Input.InputManager,SiliconStudio.Xenko.Input.Keys)">
            <summary>
            Injects a Key up (release) event into the events stack
            </summary>
            <param name="inputManager">the InputManager</param>
            <param name="key">the key you want to simulate</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.Extensions.InputManagerExtensions.SimulateTapDown(SiliconStudio.Xenko.Input.InputManager,SiliconStudio.Core.Mathematics.Vector2)">
            <summary>
            Injects a tap down touch pointer event into the events stack
            </summary>
            <param name="inputManager">the InputManager</param>
            <param name="coords">the coordinates (0.0 -> 1.0) on the screen</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.Extensions.InputManagerExtensions.SimulateTapMove(SiliconStudio.Xenko.Input.InputManager,SiliconStudio.Core.Mathematics.Vector2,SiliconStudio.Core.Mathematics.Vector2,System.TimeSpan)">
            <summary>
            Injects a tap move touch pointer event into the events stack
            </summary>
            <param name="inputManager">the InputManager</param>
            <param name="coords">the coordinates (0.0 -> 1.0) on the screen</param>
            <param name="deltaCoords">the delta coordinates from the previous event</param>
            <param name="delta">the delta time between events</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.Extensions.InputManagerExtensions.SimulateTapUp(SiliconStudio.Xenko.Input.InputManager,SiliconStudio.Core.Mathematics.Vector2,SiliconStudio.Core.Mathematics.Vector2,System.TimeSpan)">
            <summary>
            Injects a tap up (release) touch pointer event into the events stack
            </summary>
            <param name="inputManager">the InputManager</param>
            <param name="coords">the coordinates (0.0 -> 1.0) on the screen</param>
            <param name="deltaCoords">the delta coordinates from the previous event</param>
            <param name="delta">the delta time between events</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.InputManagerFactory.NewInputManager(SiliconStudio.Core.IServiceRegistry,SiliconStudio.Xenko.Games.GameContext)">
            <summary>
            Create the appropriate instance of InputManager depending on the platform and context associated to <paramref name="registry"/>.
            </summary>
            <param name="registry"></param>
            <param name="context">Associated context. Cannot be null.</param>
            <returns></returns>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.IVirtualButton">
            <summary>
            Interface IVirtualButton
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.IVirtualButton.GetValue(SiliconStudio.Xenko.Input.InputManager)">
            <summary>
            Gets the value associated with this virtual button from an input manager.
            </summary>
            <param name="manager">The manager.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.KeyEvent">
            <summary>
            A keyboard event.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.KeyEvent.Key">
            <summary>
            The key that is being pressed or released.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.KeyEvent.Type">
            <summary>
            The key event type (released or pressed).
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.KeyEvent.#ctor(SiliconStudio.Xenko.Input.Keys,SiliconStudio.Xenko.Input.KeyEventType)">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Input.KeyEvent"/> struct.
            </summary>
            <param name="key">The key.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.KeyEvent.Equals(SiliconStudio.Xenko.Input.KeyEvent)">
            <inheritdoc/>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.KeyEvent.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.KeyEvent.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.KeyEvent.op_Equality(SiliconStudio.Xenko.Input.KeyEvent,SiliconStudio.Xenko.Input.KeyEvent)">
            <summary>
            Implements the ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.KeyEvent.op_Inequality(SiliconStudio.Xenko.Input.KeyEvent,SiliconStudio.Xenko.Input.KeyEvent)">
            <summary>
            Implements the !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.KeyEventType">
            <summary>
            Used by <see cref="T:SiliconStudio.Xenko.Input.KeyEvent"/>
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.KeyEventType.Pressed">
            <summary>
            A key has been pressed.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.KeyEventType.Released">
            <summary>
            A key has been released.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.Keys">
            <summary>
            Enumeration for keys.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.None">
            <summary>
            The 'none' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Cancel">
            <summary>
            The 'cancel' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Back">
            <summary>
            The 'back' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Tab">
            <summary>
            The 'tab' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.LineFeed">
            <summary>
            The 'linefeed' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Clear">
            <summary>
            The 'clear' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Enter">
            <summary>
            The 'enter' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Return">
            <summary>
            The 'return' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Pause">
            <summary>
            The 'pause' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Capital">
            <summary>
            The 'capital' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.CapsLock">
            <summary>
            The 'capslock' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.HangulMode">
            <summary>
            The 'hangulmode' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.KanaMode">
            <summary>
            The 'kanamode' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.JunjaMode">
            <summary>
            The 'junjamode' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.FinalMode">
            <summary>
            The 'finalmode' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.HanjaMode">
            <summary>
            The 'hanjamode' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.KanjiMode">
            <summary>
            The 'kanjimode' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Escape">
            <summary>
            The 'escape' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.ImeConvert">
            <summary>
            The 'imeconvert' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.ImeNonConvert">
            <summary>
            The 'imenonconvert' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.ImeAccept">
            <summary>
            The 'imeaccept' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.ImeModeChange">
            <summary>
            The 'imemodechange' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Space">
            <summary>
            The 'space' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.PageUp">
            <summary>
            The 'pageup' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Prior">
            <summary>
            The 'prior' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Next">
            <summary>
            The 'next' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.PageDown">
            <summary>
            The 'pagedown' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.End">
            <summary>
            The 'end' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Home">
            <summary>
            The 'home' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Left">
            <summary>
            The 'left' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Up">
            <summary>
            The 'up' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Right">
            <summary>
            The 'right' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Down">
            <summary>
            The 'down' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Select">
            <summary>
            The 'select' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Print">
            <summary>
            The 'print' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Execute">
            <summary>
            The 'execute' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.PrintScreen">
            <summary>
            The 'printscreen' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Snapshot">
            <summary>
            The 'snapshot' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Insert">
            <summary>
            The 'insert' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Delete">
            <summary>
            The 'delete' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Help">
            <summary>
            The 'help' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.D0">
            <summary>
            The 'd0' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.D1">
            <summary>
            The 'd1' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.D2">
            <summary>
            The 'd2' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.D3">
            <summary>
            The 'd3' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.D4">
            <summary>
            The 'd4' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.D5">
            <summary>
            The 'd5' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.D6">
            <summary>
            The 'd6' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.D7">
            <summary>
            The 'd7' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.D8">
            <summary>
            The 'd8' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.D9">
            <summary>
            The 'd9' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.A">
            <summary>
            The 'a' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.B">
            <summary>
            The 'b' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.C">
            <summary>
            The 'c' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.D">
            <summary>
            The 'd' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.E">
            <summary>
            The 'e' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F">
            <summary>
            The 'f' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.G">
            <summary>
            The 'g' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.H">
            <summary>
            The 'h' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.I">
            <summary>
            The 'i' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.J">
            <summary>
            The 'j' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.K">
            <summary>
            The 'k' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.L">
            <summary>
            The 'l' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.M">
            <summary>
            The 'm' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.N">
            <summary>
            The 'n' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.O">
            <summary>
            The 'o' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.P">
            <summary>
            The 'p' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Q">
            <summary>
            The 'q' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.R">
            <summary>
            The 'r' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.S">
            <summary>
            The 's' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.T">
            <summary>
            The 't' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.U">
            <summary>
            The 'u' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.V">
            <summary>
            The 'v' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.W">
            <summary>
            The 'w' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.X">
            <summary>
            The 'x' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Y">
            <summary>
            The 'y' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Z">
            <summary>
            The 'z' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.LeftWin">
            <summary>
            The 'leftwin' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.RightWin">
            <summary>
            The 'rightwin' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Apps">
            <summary>
            The 'apps' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Sleep">
            <summary>
            The 'sleep' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.NumPad0">
            <summary>
            The 'numpad0' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.NumPad1">
            <summary>
            The 'numpad1' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.NumPad2">
            <summary>
            The 'numpad2' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.NumPad3">
            <summary>
            The 'numpad3' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.NumPad4">
            <summary>
            The 'numpad4' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.NumPad5">
            <summary>
            The 'numpad5' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.NumPad6">
            <summary>
            The 'numpad6' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.NumPad7">
            <summary>
            The 'numpad7' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.NumPad8">
            <summary>
            The 'numpad8' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.NumPad9">
            <summary>
            The 'numpad9' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Multiply">
            <summary>
            The 'multiply' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Add">
            <summary>
            The 'add' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Separator">
            <summary>
            The 'separator' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Subtract">
            <summary>
            The 'subtract' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Decimal">
            <summary>
            The 'decimal' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Divide">
            <summary>
            The 'divide' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F1">
            <summary>
            The 'f1' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F2">
            <summary>
            The 'f2' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F3">
            <summary>
            The 'f3' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F4">
            <summary>
            The 'f4' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F5">
            <summary>
            The 'f5' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F6">
            <summary>
            The 'f6' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F7">
            <summary>
            The 'f7' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F8">
            <summary>
            The 'f8' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F9">
            <summary>
            The 'f9' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F10">
            <summary>
            The 'f10' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F11">
            <summary>
            The 'f11' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F12">
            <summary>
            The 'f12' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F13">
            <summary>
            The 'f13' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F14">
            <summary>
            The 'f14' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F15">
            <summary>
            The 'f15' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F16">
            <summary>
            The 'f16' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F17">
            <summary>
            The 'f17' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F18">
            <summary>
            The 'f18' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F19">
            <summary>
            The 'f19' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F20">
            <summary>
            The 'f20' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F21">
            <summary>
            The 'f21' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F22">
            <summary>
            The 'f22' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F23">
            <summary>
            The 'f23' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.F24">
            <summary>
            The 'f24' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.NumLock">
            <summary>
            The 'numlock' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Scroll">
            <summary>
            The 'scroll' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.LeftShift">
            <summary>
            The 'leftshift' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.RightShift">
            <summary>
            The 'rightshift' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.LeftCtrl">
            <summary>
            The 'leftctrl' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.RightCtrl">
            <summary>
            The 'rightctrl' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.LeftAlt">
            <summary>
            The 'leftalt' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.RightAlt">
            <summary>
            The 'rightalt' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.BrowserBack">
            <summary>
            The 'browserback' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.BrowserForward">
            <summary>
            The 'browserforward' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.BrowserRefresh">
            <summary>
            The 'browserrefresh' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.BrowserStop">
            <summary>
            The 'browserstop' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.BrowserSearch">
            <summary>
            The 'browsersearch' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.BrowserFavorites">
            <summary>
            The 'browserfavorites' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.BrowserHome">
            <summary>
            The 'browserhome' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.VolumeMute">
            <summary>
            The 'volumemute' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.VolumeDown">
            <summary>
            The 'volumedown' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.VolumeUp">
            <summary>
            The 'volumeup' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.MediaNextTrack">
            <summary>
            The 'medianexttrack' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.MediaPreviousTrack">
            <summary>
            The 'mediaprevioustrack' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.MediaStop">
            <summary>
            The 'mediastop' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.MediaPlayPause">
            <summary>
            The 'mediaplaypause' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.LaunchMail">
            <summary>
            The 'launchmail' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.SelectMedia">
            <summary>
            The 'selectmedia' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.LaunchApplication1">
            <summary>
            The 'launchapplication1' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.LaunchApplication2">
            <summary>
            The 'launchapplication2' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Oem1">
            <summary>
            The 'oem1' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.OemSemicolon">
            <summary>
            The 'oemsemicolon' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.OemPlus">
            <summary>
            The 'oemplus' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.OemComma">
            <summary>
            The 'oemcomma' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.OemMinus">
            <summary>
            The 'oemminus' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.OemPeriod">
            <summary>
            The 'oemperiod' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Oem2">
            <summary>
            The 'oem2' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.OemQuestion">
            <summary>
            The 'oemquestion' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Oem3">
            <summary>
            The 'oem3' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.OemTilde">
            <summary>
            The 'oemtilde' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Oem4">
            <summary>
            The 'oem4' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.OemOpenBrackets">
            <summary>
            The 'oemopenbrackets' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Oem5">
            <summary>
            The 'oem5' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.OemPipe">
            <summary>
            The 'oempipe' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Oem6">
            <summary>
            The 'oem6' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.OemCloseBrackets">
            <summary>
            The 'oemclosebrackets' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Oem7">
            <summary>
            The 'oem7' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.OemQuotes">
            <summary>
            The 'oemquotes' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Oem8">
            <summary>
            The 'oem8' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Oem102">
            <summary>
            The 'oem102' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.OemBackslash">
            <summary>
            The 'oembackslash' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Attn">
            <summary>
            The 'attn' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.CrSel">
            <summary>
            The 'crsel' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.ExSel">
            <summary>
            The 'exsel' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.EraseEof">
            <summary>
            The 'eraseeof' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Play">
            <summary>
            The 'play' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Zoom">
            <summary>
            The 'zoom' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.NoName">
            <summary>
            The 'noname' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.Pa1">
            <summary>
            The 'pa1' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.OemClear">
            <summary>
            The 'oemclear' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.NumPadEnter">
            <summary>
            The 'numpad enter' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.Keys.NumPadDecimal">
            <summary>
            The 'numpad decimal' key.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GestureConfigLongPress">
            <summary>
            Configuration class the Long Press gestures.
            </summary>
            <remarks>A longPress gesture can be composed of 1 or more fingers.</remarks>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureConfigLongPress.MaximumTranslationDistance">
            <summary>
            The value represents the maximum distance a finger can translate during the longPress action.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The value has to be positive.</exception>
            <exception cref="T:System.InvalidOperationException">Tried to modify the configuration after it has been frozen by the system.</exception>
            <remarks>
            By increasing this value, the user allows small movements of the fingers during the long press.
            By decreasing this value, the user forbids any movements during the long press.</remarks>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureConfigLongPress.RequiredPressTime">
            <summary>
            The time the user has to hold his finger on the screen to trigger the gesture.
            </summary>
            <exception cref="T:System.InvalidOperationException">Tried to modify the configuration after it has been frozen by the system.</exception>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.GestureConfigLongPress.#ctor">
            <summary>
            Create a default LongPress gesture configuration. 
            </summary>
            <remarks>Single finger and 1 second long press.</remarks>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.CompassSensor">
            <summary>
            This class represents a sensor of type compass. It measures the angle between the device and the north.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.CompassSensor.Heading">
            <summary>
            Gets the value of north heading, that is the angle (in radian) between the top of the device and north.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.MouseButton">
            <summary>
            Mouse buttons.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.MouseButton.Left">
            <summary>
            Left button.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.MouseButton.Middle">
            <summary>
            Middle button.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.MouseButton.Right">
            <summary>
            Right button.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.MouseButton.Extended1">
            <summary>
            Extended button 1.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.MouseButton.Extended2">
            <summary>
            Extended button 2.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.NamespaceDoc">
            <summary>
            The <see cref="N:SiliconStudio.Xenko.Input"/> namespace contains types to manage the input.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.OrientationSensor">
            <summary>
            This class represents a sensor of type Orientation. It measures the orientation of device in the real world.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.OrientationSensor.Yaw">
            <summary>
            Gets the value of the yaw (in radian). The yaw is the rotation around the vertical axis of the device, that is the Oz axis.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.OrientationSensor.Pitch">
            <summary>
            Gets the value of the pitch (in radian). The pitch is the rotation around the lateral axis of the device, that is the Ox axis.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.OrientationSensor.Roll">
            <summary>
            Gets the value of the roll (in radian). The roll is the rotation around the longitudinal axis of the device, that is the Oy axis.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.OrientationSensor.Quaternion">
            <summary>
            Gets the quaternion specifying the current rotation of the device.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.OrientationSensor.RotationMatrix">
            <summary>
            Gets the rotation matrix specifying the current rotation of the device.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.PointerEvent">
            <summary>
            A pointer event.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.PointerEvent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Input.PointerEvent" /> class.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.PointerEvent.#ctor(System.Int32,SiliconStudio.Core.Mathematics.Vector2,SiliconStudio.Core.Mathematics.Vector2,System.TimeSpan,SiliconStudio.Xenko.Input.PointerState,SiliconStudio.Xenko.Input.PointerType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Input.PointerEvent" /> class.
            </summary>
            <param name="pointerId">The pointer id.</param>
            <param name="position">The position.</param>
            <param name="deltaPosition">The delta position.</param>
            <param name="deltaTime">The delta time.</param>
            <param name="state">The state.</param>
            <param name="pointerType">Type of the pointer.</param>
            <param name="isPrimary">if set to <c>true</c> [is primary].</param>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.PointerEvent.PointerId">
            <summary>
            Gets a unique identifier of the pointer. See remarks.
            </summary>
            <value>The pointer id.</value>
            <remarks>The default mouse pointer will always be affected to the PointerId 0. On a tablet, a pen or each fingers will get a unique identifier.</remarks>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.PointerEvent.Position">
            <summary>
            Gets the absolute screen position of the pointer.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.PointerEvent.DeltaPosition">
            <summary>
            Gets the delta position of the pointer since the previous frame.
            </summary>
            <value>The delta position.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.PointerEvent.DeltaTime">
            <summary>
            Gets the amount of time since the previous state.
            </summary>
            <value>The delta time.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.PointerEvent.State">
            <summary>
            Gets the state of this pointer event (down, up, move... etc.)
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.PointerEvent.PointerType">
            <summary>
            Gets the type of the pointer.
            </summary>
            <value>The type of the pointer.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.PointerEvent.IsPrimary">
            <summary>
            Gets a boolean indicating whether this is the default primary pointer.
            </summary>
            <value><c>true</c> if this instance is primary; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.PointerEvent.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>PointerEvent.</returns>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.PointerState">
            <summary>
            State of a pointer event.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.PointerState.Down">
            <summary>
            The pointer just started to hit the digitizer.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.PointerState.Move">
            <summary>
            The pointer is moving onto the digitizer.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.PointerState.Up">
            <summary>
            The pointer just released pressure to the digitizer.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.PointerState.Out">
            <summary>
            The pointer is out of the digitizer.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.PointerState.Cancel">
            <summary>
            The pointer has been canceled.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.PointerType">
            <summary>
            Type of a pointer device.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.PointerType.Unknown">
            <summary>
            An unknown pointer.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.PointerType.Mouse">
            <summary>
            A mouse pointer.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.PointerType.Touch">
            <summary>
            A touch pointer.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GestureConfigComposite">
            <summary>
            Configuration class for the Composite gesture.
            </summary>
            <remarks>
            <para>A composite gesture is a transformation which is a composition of a translation, a rotation and a scale.
            It is performed by using two fingers and performing translation, scale and rotation motions.</para>
            <para>A composite gesture can only be composed of 2 fingers. 
            Trying to modify the <see cref="P:SiliconStudio.Xenko.Input.GestureConfig.RequiredNumberOfFingers"/> field will throw an exception.</para></remarks>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureConfigComposite.MinimumScaleValue">
            <summary>
            The scale value above which the gesture is started.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The value has to be greater or equal to 1.</exception>
            <exception cref="T:System.InvalidOperationException">Tried to modify the configuration after it has been frozen by the system.</exception>
            <remarks>The user can increase this value if he has small or no interest in the scale component of the transformation. 
            By doing so, he avoids triggering the Composite Gesture when only small scale changes happen. 
            On the contrary, the user can decrease this value if he wants to be immediately warned about the smallest change in scale.</remarks>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureConfigComposite.MinimumTranslationDistance">
            <summary>
            The translation distance above which the gesture is started.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The value has to be positive.</exception>
            <exception cref="T:System.InvalidOperationException">Tried to modify the configuration after it has been frozen by the system.</exception>
            <remarks>The user can increase this value if he has small or no interest in the translation component of the transformation. 
            By doing so, he avoids triggering the Composite Gesture when only small translation changes happen. 
            On the contrary, the user can decrease this value if he wants to be immediately warned about the smallest change in translation.</remarks>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureConfigComposite.MinimumRotationAngle">
            <summary>
            The rotation angle (in radian) above which the gesture is started.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The angle has to be strictly positive.</exception>
            <exception cref="T:System.InvalidOperationException">Tried to modify the configuration after it has been frozen by the system.</exception>
            <remarks>The user can increase this value if he has small or no interest in the rotation component of the transformation. 
            By doing so, he avoids triggering the Composite Gesture when only small rotation changes happen. 
            On the contrary, the user can decrease this value if he wants to be immediately warned about the smallest change in rotation.</remarks>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.GestureConfigComposite.#ctor">
            <summary>
            Create a default Rotation gesture configuration.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.GestureConfigTap">
            <summary>
            Configuration class for the Tap gesture.
            </summary>
            <remarks>A tap gesture can be composed of 1 or more fingers.</remarks>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureConfigTap.RequiredNumberOfTaps">
            <summary>
            This value represents the required number of successive user touches to trigger the gesture. For example: 1 for single touch, 2 for double touch, and so on...
            </summary>
            <remarks>This value is strictly positive.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">The given value is not greater or equal to 1.</exception>
            <exception cref="T:System.InvalidOperationException">Tried to modify the configuration after it has been frozen by the system.</exception>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureConfigTap.MaximumTimeBetweenTaps">
            <summary>
            This value represents the maximum interval of time that can separate two touches of a same gesture. 
            By reducing this value, the system will tend to detect multi-touch gesture has several single touch gesture.
            By increasing this value, the system will tend to regroup distant (in time) single touch gestures into a multi-touch gesture.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureConfigTap.MaximumPressTime">
            <summary>
            This value represents the maximum amount of time that the user can stay touching the screen before taking off its finger. 
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.GestureConfigTap.MaximumDistanceTaps">
            <summary>
            The value represents the maximum distance that can separate two touches of the same finger during the gesture.
            By reducing this value, the system will tend to detect multi-touch gesture has several single touch gesture.
            By increasing this value, the system will tend to regroup distant single touch gestures into a multi-touch gesture.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The value has to be positive.</exception>
            <exception cref="T:System.InvalidOperationException">Tried to modify the configuration after it has been frozen by the system.</exception>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.GestureConfigTap.#ctor">
            <summary>
            Create a default Tap gesture configuration for single touch and single finger detection.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.GestureConfigTap.#ctor(System.Int32,System.Int32)">
            <summary>
            Create a default Tap gesture configuration for the given numbers of touches and fingers.
            </summary>
            <param name="numberOfTap">The number of taps required</param>
            <param name="numberOfFingers">The number of fingers required</param>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.SensorBase">
            <summary>
            The base class for a device sensor.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.SensorBase.IsEnabled">
            <summary>
            Gets or sets the sensor enabled state.
            </summary>
            <exception cref="T:System.InvalidOperationException">Tried to enable a sensor type that is not supported.</exception>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.SensorBase.IsSupported">
            <summary>
            Gets the value indicating if the sensor is available on the current device.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.SensorBase.ResetData">
            <summary>
            Reset the current data of the sensor
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.UserAccelerationSensor">
            <summary>
            This class represents a sensor of type user acceleration. It measures the acceleration applied by the user (no gravity) onto the device.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.UserAccelerationSensor.Acceleration">
            <summary>
            Gets the current acceleration applied by the user (in meters/seconds^2).
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.VirtualButton">
            <summary>
            Describes a virtual button (a key from a keyboard, a mouse button, an axis of a joystick...etc.).
            </summary>
            <summary>
            Describes a virtual button (a key from a keyboard, a mouse button, an axis of a joystick...etc.).
            </summary>
            <summary>
            Describes a virtual button (a key from a keyboard, a mouse button, an axis of a joystick...etc.).
            </summary>
            <summary>
            Describes a virtual button (a key from a keyboard, a mouse button, an axis of a joystick...etc.).
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.VirtualButton.#ctor(System.String,SiliconStudio.Xenko.Input.VirtualButtonType,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Input.VirtualButton" /> class.
            </summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <param name="id">The id.</param>
            <param name="isPositiveAndNegative">if set to <c>true</c> [is positive and negative].</param>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Id">
            <summary>
            Unique Id for a particular button <see cref="F:SiliconStudio.Xenko.Input.VirtualButton.Type"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Name">
            <summary>
            Name of this button.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Type">
            <summary>
            Type of this button.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.IsPositiveAndNegative">
            <summary>
            A boolean indicating whether this button supports positive and negative value.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.VirtualButton.op_Addition(SiliconStudio.Xenko.Input.IVirtualButton,SiliconStudio.Xenko.Input.VirtualButton)">
            <summary>
            Implements the + operator to combine to <see cref="T:SiliconStudio.Xenko.Input.VirtualButton"/>.
            </summary>
            <param name="left">The left virtual button.</param>
            <param name="right">The right virtual button.</param>
            <returns>A set containting the two virtual buttons.</returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.VirtualButton.op_Implicit(SiliconStudio.Xenko.Input.VirtualButton)~SiliconStudio.Xenko.Input.VirtualButtonGroup">
            <summary>
            Performs an implicit conversion from <see cref="T:SiliconStudio.Xenko.Input.VirtualButton" /> to <see cref="!:VirtualButtonAnd" />.
            </summary>
            <param name="button">The virtual button.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.VirtualButton.Registered">
            <summary>
            Gets all registered <see cref="T:SiliconStudio.Xenko.Input.VirtualButton"/>.
            </summary>
            <value>The registered virtual buttons.</value>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.VirtualButton.Find(System.String)">
            <summary>
            Finds a virtual button by the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>An instance of VirtualButton or null if no match.</returns>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.VirtualButton.Find(System.Int32)">
            <summary>
            Finds a virtual button by the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>An instance of VirtualButton or null if no match.</returns>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.VirtualButton.GamePad">
            <summary>
            GamePad virtual button.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.GamePad.PadIndex">
            <summary>
            The pad index.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.VirtualButton.GamePad.Index(System.Int32)">
            <summary>
            Return an instance of a particular GamePad.
            </summary>
            <param name="index">The gamepad index.</param>
            <returns>A new GamePad button linked to the gamepad index.</returns>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.GamePad.PadUp">
            <summary>
            Equivalent to <see cref="F:SiliconStudio.Xenko.Input.GamePadButton.PadUp"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.GamePad.PadDown">
            <summary>
            Equivalent to <see cref="F:SiliconStudio.Xenko.Input.GamePadButton.PadDown"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.GamePad.PadLeft">
            <summary>
            Equivalent to <see cref="F:SiliconStudio.Xenko.Input.GamePadButton.PadLeft"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.GamePad.PadRight">
            <summary>
            Equivalent to <see cref="F:SiliconStudio.Xenko.Input.GamePadButton.PadRight"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.GamePad.Start">
            <summary>
            Equivalent to <see cref="F:SiliconStudio.Xenko.Input.GamePadButton.Start"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.GamePad.Back">
            <summary>
            Equivalent to <see cref="F:SiliconStudio.Xenko.Input.GamePadButton.Back"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.GamePad.LeftThumb">
            <summary>
            Equivalent to <see cref="F:SiliconStudio.Xenko.Input.GamePadButton.LeftThumb"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.GamePad.RightThumb">
            <summary>
            Equivalent to <see cref="F:SiliconStudio.Xenko.Input.GamePadButton.RightThumb"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.GamePad.LeftShoulder">
            <summary>
            Equivalent to <see cref="F:SiliconStudio.Xenko.Input.GamePadButton.LeftShoulder"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.GamePad.RightShoulder">
            <summary>
            Equivalent to <see cref="F:SiliconStudio.Xenko.Input.GamePadButton.RightShoulder"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.GamePad.A">
            <summary>
            Equivalent to <see cref="F:SiliconStudio.Xenko.Input.GamePadButton.A"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.GamePad.B">
            <summary>
            Equivalent to <see cref="F:SiliconStudio.Xenko.Input.GamePadButton.B"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.GamePad.X">
            <summary>
            Equivalent to <see cref="F:SiliconStudio.Xenko.Input.GamePadButton.X"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.GamePad.Y">
            <summary>
            Equivalent to <see cref="F:SiliconStudio.Xenko.Input.GamePadButton.Y"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.GamePad.LeftThumbAxisX">
            <summary>
            Equivalent to the X Axis of <see cref="F:SiliconStudio.Xenko.Input.GamePadState.LeftThumb"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.GamePad.LeftThumbAxisY">
            <summary>
            Equivalent to the Y Axis of <see cref="F:SiliconStudio.Xenko.Input.GamePadState.LeftThumb"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.GamePad.RightThumbAxisX">
            <summary>
            Equivalent to the X Axis of <see cref="F:SiliconStudio.Xenko.Input.GamePadState.RightThumb"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.GamePad.RightThumbAxisY">
            <summary>
            Equivalent to the Y Axis of <see cref="F:SiliconStudio.Xenko.Input.GamePadState.RightThumb"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.GamePad.LeftTrigger">
            <summary>
            Equivalent to <see cref="F:SiliconStudio.Xenko.Input.GamePadState.LeftTrigger"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.GamePad.RightTrigger">
            <summary>
            Equivalent to <see cref="F:SiliconStudio.Xenko.Input.GamePadState.RightTrigger"/>.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.VirtualButton.Keyboard">
            <summary>
            Keyboard virtual button.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.None">
            <summary>
            The 'none' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Cancel">
            <summary>
            The 'cancel' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Back">
            <summary>
            The 'back' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Tab">
            <summary>
            The 'tab' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.LineFeed">
            <summary>
            The 'linefeed' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Clear">
            <summary>
            The 'clear' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Enter">
            <summary>
            The 'enter' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Return">
            <summary>
            The 'return' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Pause">
            <summary>
            The 'pause' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Capital">
            <summary>
            The 'capital' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.CapsLock">
            <summary>
            The 'capslock' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.HangulMode">
            <summary>
            The 'hangulmode' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.KanaMode">
            <summary>
            The 'kanamode' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.JunjaMode">
            <summary>
            The 'junjamode' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.FinalMode">
            <summary>
            The 'finalmode' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.HanjaMode">
            <summary>
            The 'hanjamode' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.KanjiMode">
            <summary>
            The 'kanjimode' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Escape">
            <summary>
            The 'escape' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.ImeConvert">
            <summary>
            The 'imeconvert' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.ImeNonConvert">
            <summary>
            The 'imenonconvert' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.ImeAccept">
            <summary>
            The 'imeaccept' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.ImeModeChange">
            <summary>
            The 'imemodechange' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Space">
            <summary>
            The 'space' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.PageUp">
            <summary>
            The 'pageup' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Prior">
            <summary>
            The 'prior' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Next">
            <summary>
            The 'next' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.PageDown">
            <summary>
            The 'pagedown' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.End">
            <summary>
            The 'end' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Home">
            <summary>
            The 'home' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Left">
            <summary>
            The 'left' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Up">
            <summary>
            The 'up' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Right">
            <summary>
            The 'right' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Down">
            <summary>
            The 'down' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Select">
            <summary>
            The 'select' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Print">
            <summary>
            The 'print' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Execute">
            <summary>
            The 'execute' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.PrintScreen">
            <summary>
            The 'printscreen' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Snapshot">
            <summary>
            The 'snapshot' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Insert">
            <summary>
            The 'insert' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Delete">
            <summary>
            The 'delete' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Help">
            <summary>
            The 'help' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.D0">
            <summary>
            The 'd0' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.D1">
            <summary>
            The 'd1' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.D2">
            <summary>
            The 'd2' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.D3">
            <summary>
            The 'd3' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.D4">
            <summary>
            The 'd4' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.D5">
            <summary>
            The 'd5' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.D6">
            <summary>
            The 'd6' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.D7">
            <summary>
            The 'd7' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.D8">
            <summary>
            The 'd8' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.D9">
            <summary>
            The 'd9' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.A">
            <summary>
            The 'a' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.B">
            <summary>
            The 'b' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.C">
            <summary>
            The 'c' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.D">
            <summary>
            The 'd' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.E">
            <summary>
            The 'e' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F">
            <summary>
            The 'f' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.G">
            <summary>
            The 'g' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.H">
            <summary>
            The 'h' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.I">
            <summary>
            The 'i' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.J">
            <summary>
            The 'j' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.K">
            <summary>
            The 'k' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.L">
            <summary>
            The 'l' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.M">
            <summary>
            The 'm' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.N">
            <summary>
            The 'n' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.O">
            <summary>
            The 'o' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.P">
            <summary>
            The 'p' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Q">
            <summary>
            The 'q' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.R">
            <summary>
            The 'r' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.S">
            <summary>
            The 's' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.T">
            <summary>
            The 't' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.U">
            <summary>
            The 'u' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.V">
            <summary>
            The 'v' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.W">
            <summary>
            The 'w' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.X">
            <summary>
            The 'x' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Y">
            <summary>
            The 'y' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Z">
            <summary>
            The 'z' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.LeftWin">
            <summary>
            The 'leftwin' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.RightWin">
            <summary>
            The 'rightwin' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Apps">
            <summary>
            The 'apps' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Sleep">
            <summary>
            The 'sleep' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.NumPad0">
            <summary>
            The 'numpad0' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.NumPad1">
            <summary>
            The 'numpad1' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.NumPad2">
            <summary>
            The 'numpad2' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.NumPad3">
            <summary>
            The 'numpad3' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.NumPad4">
            <summary>
            The 'numpad4' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.NumPad5">
            <summary>
            The 'numpad5' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.NumPad6">
            <summary>
            The 'numpad6' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.NumPad7">
            <summary>
            The 'numpad7' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.NumPad8">
            <summary>
            The 'numpad8' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.NumPad9">
            <summary>
            The 'numpad9' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Multiply">
            <summary>
            The 'multiply' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Add">
            <summary>
            The 'add' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Separator">
            <summary>
            The 'separator' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Subtract">
            <summary>
            The 'subtract' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Decimal">
            <summary>
            The 'decimal' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Divide">
            <summary>
            The 'divide' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F1">
            <summary>
            The 'f1' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F2">
            <summary>
            The 'f2' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F3">
            <summary>
            The 'f3' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F4">
            <summary>
            The 'f4' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F5">
            <summary>
            The 'f5' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F6">
            <summary>
            The 'f6' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F7">
            <summary>
            The 'f7' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F8">
            <summary>
            The 'f8' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F9">
            <summary>
            The 'f9' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F10">
            <summary>
            The 'f10' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F11">
            <summary>
            The 'f11' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F12">
            <summary>
            The 'f12' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F13">
            <summary>
            The 'f13' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F14">
            <summary>
            The 'f14' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F15">
            <summary>
            The 'f15' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F16">
            <summary>
            The 'f16' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F17">
            <summary>
            The 'f17' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F18">
            <summary>
            The 'f18' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F19">
            <summary>
            The 'f19' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F20">
            <summary>
            The 'f20' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F21">
            <summary>
            The 'f21' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F22">
            <summary>
            The 'f22' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F23">
            <summary>
            The 'f23' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.F24">
            <summary>
            The 'f24' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.NumLock">
            <summary>
            The 'numlock' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Scroll">
            <summary>
            The 'scroll' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.LeftShift">
            <summary>
            The 'leftshift' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.RightShift">
            <summary>
            The 'rightshift' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.LeftCtrl">
            <summary>
            The 'leftctrl' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.RightCtrl">
            <summary>
            The 'rightctrl' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.LeftAlt">
            <summary>
            The 'leftalt' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.RightAlt">
            <summary>
            The 'rightalt' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.BrowserBack">
            <summary>
            The 'browserback' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.BrowserForward">
            <summary>
            The 'browserforward' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.BrowserRefresh">
            <summary>
            The 'browserrefresh' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.BrowserStop">
            <summary>
            The 'browserstop' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.BrowserSearch">
            <summary>
            The 'browsersearch' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.BrowserFavorites">
            <summary>
            The 'browserfavorites' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.BrowserHome">
            <summary>
            The 'browserhome' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.VolumeMute">
            <summary>
            The 'volumemute' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.VolumeDown">
            <summary>
            The 'volumedown' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.VolumeUp">
            <summary>
            The 'volumeup' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.MediaNextTrack">
            <summary>
            The 'medianexttrack' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.MediaPreviousTrack">
            <summary>
            The 'mediaprevioustrack' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.MediaStop">
            <summary>
            The 'mediastop' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.MediaPlayPause">
            <summary>
            The 'mediaplaypause' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.LaunchMail">
            <summary>
            The 'launchmail' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.SelectMedia">
            <summary>
            The 'selectmedia' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.LaunchApplication1">
            <summary>
            The 'launchapplication1' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.LaunchApplication2">
            <summary>
            The 'launchapplication2' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Oem1">
            <summary>
            The 'oem1' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.OemSemicolon">
            <summary>
            The 'oemsemicolon' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.OemPlus">
            <summary>
            The 'oemplus' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.OemComma">
            <summary>
            The 'oemcomma' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.OemMinus">
            <summary>
            The 'oemminus' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.OemPeriod">
            <summary>
            The 'oemperiod' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Oem2">
            <summary>
            The 'oem2' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.OemQuestion">
            <summary>
            The 'oemquestion' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Oem3">
            <summary>
            The 'oem3' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.OemTilde">
            <summary>
            The 'oemtilde' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Oem4">
            <summary>
            The 'oem4' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.OemOpenBrackets">
            <summary>
            The 'oemopenbrackets' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Oem5">
            <summary>
            The 'oem5' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.OemPipe">
            <summary>
            The 'oempipe' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Oem6">
            <summary>
            The 'oem6' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.OemCloseBrackets">
            <summary>
            The 'oemclosebrackets' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Oem7">
            <summary>
            The 'oem7' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.OemQuotes">
            <summary>
            The 'oemquotes' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Oem8">
            <summary>
            The 'oem8' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Oem102">
            <summary>
            The 'oem102' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.OemBackslash">
            <summary>
            The 'oembackslash' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Attn">
            <summary>
            The 'attn' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.CrSel">
            <summary>
            The 'crsel' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.ExSel">
            <summary>
            The 'exsel' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.EraseEof">
            <summary>
            The 'eraseeof' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Play">
            <summary>
            The 'play' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Zoom">
            <summary>
            The 'zoom' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.NoName">
            <summary>
            The 'noname' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.Pa1">
            <summary>
            The 'pa1' key.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Keyboard.OemClear">
            <summary>
            The 'oemclear' key.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.VirtualButton.Mouse">
            <summary>
            Mouse virtual button.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Mouse.Left">
            <summary>
            Equivalent to <see cref="F:SiliconStudio.Xenko.Input.MouseButton.Left"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Mouse.Middle">
            <summary>
            Equivalent to <see cref="F:SiliconStudio.Xenko.Input.MouseButton.Middle"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Mouse.Right">
            <summary>
            Equivalent to <see cref="F:SiliconStudio.Xenko.Input.MouseButton.Right"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Mouse.Extended1">
            <summary>
            Equivalent to <see cref="F:SiliconStudio.Xenko.Input.MouseButton.Extended1"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Mouse.Extended2">
            <summary>
            Equivalent to <see cref="F:SiliconStudio.Xenko.Input.MouseButton.Extended2"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Mouse.PositionX">
            <summary>
            Equivalent to X Axis of <see cref="P:SiliconStudio.Xenko.Input.InputManager.MousePosition"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButton.Mouse.PositionY">
            <summary>
            Equivalent to Y Axis of <see cref="P:SiliconStudio.Xenko.Input.InputManager.MousePosition"/>.
            </summary>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.VirtualButtonBinding">
            <summary>
            Describes a binding between a name and a <see cref="T:SiliconStudio.Xenko.Input.IVirtualButton"/>.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.VirtualButtonBinding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Input.VirtualButtonBinding" /> class.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.VirtualButtonBinding.#ctor(System.Object,SiliconStudio.Xenko.Input.IVirtualButton)">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Input.VirtualButtonBinding" /> class.
            </summary>
            <param name="name">The name.</param>
            <param name="button">The button.</param>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.VirtualButtonBinding.Name">
            <summary>
            Gets or sets the name of this virtual button.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.VirtualButtonBinding.Button">
            <summary>
            Gets or sets the virtual button.
            </summary>
            <value>The virtual button.</value>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.VirtualButtonBinding.GetValue(SiliconStudio.Xenko.Input.InputManager)">
            <summary>
            Gets the value for a particular binding.
            </summary>
            <returns>Value of the binding</returns>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.VirtualButtonConfig">
            <summary>
            Describes the configuration composed by a collection of <see cref="T:SiliconStudio.Xenko.Input.VirtualButtonBinding"/>.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.VirtualButtonConfig.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Input.VirtualButtonConfig" /> class.
            </summary>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.VirtualButtonConfig.BindingNames">
            <summary>
            Gets the binding names.
            </summary>
            <value>The binding names.</value>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.VirtualButtonConfigSet">
            <summary>
            A collection of <see cref="T:SiliconStudio.Xenko.Input.VirtualButtonConfig"/>.
            </summary>
            <remarks>
            Several virtual button configurations can be stored in this instance. 
            For example, User0 config could be stored on index 0, User1 on index 1...etc.
            </remarks>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.VirtualButtonConfigSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Input.VirtualButtonConfigSet" /> class.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:SiliconStudio.Xenko.Input.VirtualButtonGroup" -->
        <!-- Badly formed XML comment ignored for member "P:SiliconStudio.Xenko.Input.VirtualButtonGroup.IsDisjunction" -->
        <member name="M:SiliconStudio.Xenko.Input.VirtualButtonGroup.op_Addition(SiliconStudio.Xenko.Input.VirtualButtonGroup,SiliconStudio.Xenko.Input.IVirtualButton)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="combination">The combination.</param>
            <param name="virtualButton">The virtual button.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.VirtualButtonTwoWay">
            <summary>
            Describes a <see cref="T:SiliconStudio.Xenko.Input.IVirtualButton"/> using the sum of a negative and positive button.
            </summary>
            <remarks>
            This virtual button is for example useful to bind a key to a negative value (key 'left') 
            and another key to a positive value (key 'right') thus simulating an axis button.
            The result of this virtual 
            <code>Result = PositiveButton.GetValue - NegativeButton.GetValue;</code>
            </remarks>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.VirtualButtonTwoWay.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Input.VirtualButtonTwoWay" /> class.
            </summary>
        </member>
        <member name="M:SiliconStudio.Xenko.Input.VirtualButtonTwoWay.#ctor(SiliconStudio.Xenko.Input.IVirtualButton,SiliconStudio.Xenko.Input.IVirtualButton)">
            <summary>
            Initializes a new instance of the <see cref="T:SiliconStudio.Xenko.Input.VirtualButtonTwoWay" /> class.
            </summary>
            <param name="negativeButton">The negative button.</param>
            <param name="positiveButton">The positive button.</param>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.VirtualButtonTwoWay.NegativeButton">
            <summary>
            Gets or sets the negative button that will generate a 'negative' value if it is pressed.
            </summary>
            <value>The negative button.</value>
        </member>
        <member name="P:SiliconStudio.Xenko.Input.VirtualButtonTwoWay.PositiveButton">
            <summary>
            Gets or sets the positive button that will generate a 'positive' value if it is pressed.
            </summary>
            <value>The positive button.</value>
        </member>
        <member name="T:SiliconStudio.Xenko.Input.VirtualButtonType">
            <summary>
            Type of a <see cref="T:SiliconStudio.Xenko.Input.VirtualButton" />.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButtonType.Keyboard">
            <summary>
            A keyboard virtual button.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButtonType.Mouse">
            <summary>
            A mouse virtual button.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButtonType.Pointer">
            <summary>
            A pointer virtual button.
            </summary>
        </member>
        <member name="F:SiliconStudio.Xenko.Input.VirtualButtonType.GamePad">
            <summary>
            A gamepad virtual button.
            </summary>
        </member>
    </members>
</doc>
