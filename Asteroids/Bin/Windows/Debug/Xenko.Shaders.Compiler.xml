<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Xenko.Shaders.Compiler</name>
    </assembly>
    <members>
        <member name="T:Xenko.Shaders.Compiler.EffectCompiler">
            <summary>
            An <see cref="T:Xenko.Shaders.Compiler.IEffectCompiler"/> which will compile effect into multiple shader code, and compile them with a <see cref="T:Xenko.Shaders.Compiler.IShaderCompiler"/>.
            </summary>
        </member>
        <member name="M:Xenko.Shaders.Compiler.EffectCompiler.ResetCache(System.Collections.Generic.HashSet{System.String})">
            <summary>
            Remove cached files for modified shaders
            </summary>
            <param name="modifiedShaders"></param>
        </member>
        <member name="M:Xenko.Shaders.Compiler.OpenGL.ShaderCompiler.#ctor(System.Int32)">
            <summary>
            The constructor.
            </summary>
            <param name="rtCount">The number of render targets</param>
        </member>
        <member name="M:Xenko.Shaders.Compiler.OpenGL.ShaderCompiler.Compile(System.String,System.String,Xenko.Shaders.ShaderStage,Xenko.Shaders.Compiler.EffectCompilerParameters,Xenko.Shaders.EffectReflection,System.String)">
            <summary>
            Converts the hlsl code into glsl and stores the result as plain text
            </summary>
            <param name="shaderSource">the hlsl shader</param>
            <param name="entryPoint">the entrypoint function name</param>
            <param name="stage">the shader pipeline stage</param>
            <param name="effectParameters"></param>
            <param name="reflection">the reflection gathered from the hlsl analysis</param>
            <param name="sourceFilename">the name of the source file</param>
            <returns></returns>
        </member>
        <member name="T:Xenko.Shaders.Compiler.OpenGL.ShaderConverter">
            <summary>
            Converts from HLSL shader sourcecode to a GLSL sourcecode.
            </summary>
        </member>
        <member name="M:Xenko.Shaders.Compiler.OpenGL.ShaderConverter.#ctor(Xenko.Core.Shaders.Convertor.GlslShaderPlatform,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Xenko.Shaders.Compiler.OpenGL.ShaderConverter"/> class.
            </summary>
        </member>
        <member name="P:Xenko.Shaders.Compiler.OpenGL.ShaderConverter.IsVerboseLog">
            <summary>
            Gets or sets a value indicating whether this instance is producing a verbose log.
            </summary>
            <value>
            <c>true</c> if this instance is producing a verbose log; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Xenko.Shaders.Compiler.OpenGL.ShaderConverter.IncludeDirectories">
            <summary>
            Gets or sets the include directories.
            </summary>
            <value>
            The include directories.
            </value>
        </member>
        <member name="P:Xenko.Shaders.Compiler.OpenGL.ShaderConverter.Macros">
            <summary>
            Gets or sets the macros.
            </summary>
            <value>
            The macros.
            </value>
        </member>
        <member name="M:Xenko.Shaders.Compiler.OpenGL.ShaderConverter.Convert(System.String,System.String,Xenko.Core.Shaders.Convertor.PipelineStage,System.String,System.Collections.Generic.IDictionary{System.Int32,System.String},Xenko.Core.Diagnostics.LoggerResult)">
            <summary>
            Converts the specified hlsl source code to glsl.
            </summary>
            <param name="hlslSourcecode">The HLSL source code.</param>
            <param name="hlslEntryPoint">The HLSL entry point.</param>
            <param name="stage">The stage to convert.</param>
            <param name="shader">The shader.</param>
            <param name="inputHlslFilepath">The input HLSL filepath.</param>
            <returns>
            The resulting glsl AST tree.
            </returns>
        </member>
        <member name="M:Xenko.Shaders.Compiler.OpenGL.ShaderConverter.Convert(Xenko.Core.Shaders.Parser.ParsingResult,System.String,Xenko.Core.Shaders.Convertor.PipelineStage,System.String,System.Collections.Generic.IDictionary{System.Int32,System.String},Xenko.Core.Diagnostics.LoggerResult)">
            <summary>
            Converts the specified hlsl source code to glsl.
            </summary>
            <param name="hlslEntryPoint">The HLSL entry point.</param>
            <param name="stage">The stage to convert.</param>
            <param name="shader">The shader.</param>
            <param name="inputHlslFilepath">The input HLSL filepath.</param>
            <returns>
            The resulting glsl AST tree.
            </returns>
        </member>
        <member name="M:Xenko.ShellHelper.RunProcessAndGetOutputAsync(System.String,System.String,Xenko.Core.Diagnostics.ILogger,System.Threading.CancellationToken)">
            <summary>
            Run the process and get the output without deadlocks.
            </summary>
            <param name="command">The name or path of the command.</param>
            <param name="parameters">The parameters of the command.</param>
            <returns>The outputs.</returns>
        </member>
        <member name="M:Xenko.ShellHelper.RunProcessAndGetOutput(System.String,System.String)">
            <summary>
            Run the process and get the output without deadlocks.
            </summary>
            <param name="command">The name or path of the command.</param>
            <param name="parameters">The parameters of the command.</param>
            <returns>The outputs.</returns>
        </member>
        <member name="M:Xenko.ShellHelper.RunProcess(System.String,System.String)">
            <summary>
            Run a process without waiting for its output.
            </summary>
            <param name="command">The name or path of the command.</param>
            <param name="parameters">The parameters of the command.</param>
        </member>
        <member name="M:Xenko.ShellHelper.LockProcessAndAddDataToList(System.Diagnostics.Process,System.Collections.Generic.List{System.String},System.Diagnostics.DataReceivedEventArgs)">
            <summary>
            Lock the process and save the string.
            </summary>
            <param name="process">The current process.</param>
            <param name="output">List of saved strings.</param>
            <param name="args">arguments of the process.</param>
        </member>
        <member name="M:Xenko.ShellHelper.LockProcessAndAddDataToLogger(System.Diagnostics.Process,Xenko.Core.Diagnostics.LoggerResult,System.Boolean,System.Diagnostics.DataReceivedEventArgs)">
            <summary>
            Lock the process and save the string.
            </summary>
            <param name="process">The current process.</param>
            <param name="logger">Logger were out current process.</param>
            <param name="isError">Is this the error output or the standard one?</param>
            <param name="args">arguments of the process.</param>
        </member>
        <member name="T:Xenko.XenkoVersion">
            <summary>
            Internal version used to identify Xenko version.
            </summary>
            <remarks>
            Note: Xenko.xkpkg and PublicVersion versions should match.
            Also, during package build, PackageUpdateVersionTask is updating that file and expect some specific text regex so be careful if you change any of this.
            </remarks>
        </member>
        <member name="F:Xenko.XenkoVersion.PublicVersion">
            <summary>
            The version used by editor for display purpose. 4th digit needs to be at least 1 if used (due to NuGet special cases).
            </summary>
        </member>
        <member name="F:Xenko.XenkoVersion.AssemblyVersion">
            <summary>
            The current assembly version as text, currently same as <see cref="F:Xenko.XenkoVersion.PublicVersion"/>.
            </summary>
        </member>
        <member name="F:Xenko.XenkoVersion.NuGetVersionSimple">
            <summary>
            The NuGet package version without special tags.
            </summary>
        </member>
        <member name="F:Xenko.XenkoVersion.NuGetVersion">
            <summary>
            The NuGet package version.
            </summary>
        </member>
        <member name="F:Xenko.XenkoVersion.NuGetVersionSuffix">
            <summary>
            The NuGet package suffix (i.e. -beta01). Note: might be replaced during package build.
            </summary>
        </member>
        <member name="F:Xenko.XenkoVersion.AssemblyInformationalVersion">
            <summary>
            The informational assembly version, containing -dev or -g[git_hash] during package.
            </summary>
        </member>
        <member name="F:Xenko.XenkoVersion.AssemblyInformationalSuffix">
            <summary>
            The assembly suffix. Note: replaced by git commit during package build.
            </summary>
        </member>
    </members>
</doc>
