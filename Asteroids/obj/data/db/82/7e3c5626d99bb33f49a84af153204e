// Copyright (c) 2014 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.
shader ComputeColorScreen : ComputeColor
{
    compose ComputeColor color1;
    compose ComputeColor color2;

    override float4 Compute()
    {
        float4 backColor = color1.Compute();
        float4 frontColor = color2.Compute();

        // From http://msdn.microsoft.com/en-us/library/windows/desktop/hh706313(v=vs.85).aspx
        //
        //  b = background, f = foreground, c = color, a = alpha
        //
        //  Screen:
        //      color = fc * fa * (1 - bc * ba) + bc * ba
        //      alpha = fa * (1-ba) + ba

        return float4(frontColor.rgb * frontColor.a * (1.0f - backColor.rgb * backColor.a) + backColor.rgb * backColor.a, BlendUtils.BasicAlphaBlend(backColor.a, frontColor.a));
    }
};
