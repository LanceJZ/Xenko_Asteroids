// Copyright (c) 2014 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.
shader ComputeColorAdd3ds : ComputeColor
{
    compose ComputeColor color1;
    compose ComputeColor color2;

    override float4 Compute()
    {
        float4 backColor = color1.Compute();
        float4 frontColor = color2.Compute();

        // From http://msdn.microsoft.com/en-us/library/windows/desktop/hh706313(v=vs.85).aspx
        //
        //  b = background, f = foreground, c = color, a = alpha, r = result color obtained with the specific blend formula
        //
        //  Add:
        //      r = fc + bc
        //
        //      color = (fa * ba) * r + (fa * (1-ba)) * fc + ((1-fa) * ba) * bc
        //      alpha = fa * (1-ba) + ba

        float3 interColor = frontColor.rgb + backColor.rgb;

        return BlendUtils.BasicBlend(backColor, frontColor, interColor);
    }
};
