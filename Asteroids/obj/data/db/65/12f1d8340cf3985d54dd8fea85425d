// Copyright (c) 2014 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.

namespace SiliconStudio.Xenko.Rendering.Images
{
    /// <summary>
    /// A bright filter shader
    /// </summary>
    internal shader BrightFilterShader : ImageEffectShader
    {
        [Color]
        stage float3 ColorModulator;

        stage float BrightPassThreshold = 2.0f;

        stage override float4 Shading()
        {
	        float3 color = Texture0.Sample(PointSampler, streams.TexCoord).rgb;

	        // Calculate perceptive luminance
	        float luminance = LuminanceUtils.Luma(color);

	        // Apply threshold
            //float middle = luminance - BrightPassThreshold;
            //float range = 0.05f;
            //float value = smoothstep(0, 1, saturate(middle * range));
	        //color *= value;
	        color *= luminance < BrightPassThreshold ? 0.0f : 1.0f;
	
	        return float4(color * ColorModulator, 1.0);
        }
    };
}
