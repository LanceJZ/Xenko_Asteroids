// Copyright (c) 2014 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.
namespace SiliconStudio.Xenko.Rendering.Lights
{
    /// <summary>
    /// Defines a point light
    /// </summary>
    shader LightPoint : LightUtil, LightStream, PositionStream4
    {
        struct PointLightData
        {
            float3 PositionWS;
            float  InvSquareRadius;
            [Color]
            float3 Color;
        };

        struct PointLightDataInternal
        {
            float3 PositionWS;
            float  InvSquareRadius;
            [Color]
            float3 Color;
        };

        void ProcessLight(PointLightDataInternal light)
        {
            float3 lightVector = light.PositionWS - streams.PositionWS;
            float lightVectorLength = length(lightVector);
            float3 lightVectorNorm = lightVector / lightVectorLength;

            float lightInvSquareRadius = light.InvSquareRadius;

            float attenuation = 1;
            attenuation *= GetDistanceAttenuation(lightVector , lightInvSquareRadius);

            streams.lightColor = light.Color * attenuation;
            streams.lightDirectionWS = lightVectorNorm;
        }
    };
}