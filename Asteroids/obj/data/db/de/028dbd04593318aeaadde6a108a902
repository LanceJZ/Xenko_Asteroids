// Copyright (c) 2014 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.
shader ComputeColorThreshold : ComputeColor
{
    compose ComputeColor color1;
    compose ComputeColor color2;

    override float4 Compute()
    {
        float4 baseColor = color1.Compute();
        float4 maskColor = color2.Compute();

        return float4(
            smoothstep(maskColor.r, maskColor.r, baseColor.r),
            smoothstep(maskColor.g, maskColor.g, baseColor.g),
            smoothstep(maskColor.b, maskColor.b, baseColor.b),
            smoothstep(maskColor.a, maskColor.a, baseColor.a)
        );
    }
};
